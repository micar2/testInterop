{
	"info": {
		"_postman_id": "29bf576d-9fb0-4465-8193-2c41b6559f7f",
		"name": "Interop",
		"description": "Los test para la comprobación del servicio rest de interop.\n\nEs necesario crear las variables globales:",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "19940828"
	},
	"item": [
		{
			"name": "crearSolicitante",
			"item": [
				{
					"name": "crearSolicitanteOK",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var nombre = \"nombreSolicitante\"+ Math.floor(Math.random()*10000);\r",
									"pm.environment.set(\"solicitante\", nombre)\r",
									"//var fecha = Math.floor(28/(Math.random()*10))+\"/\" + Math.floor(12/(Math.random()*10)) +\"/\" + Math.floor(2000-(Math.random()*10));\r",
									"var fecha = \"0\" + Math.floor(Math.random()*10)+\"/0\" + Math.floor(Math.random()*10) +\"/\" + Math.floor(2000-(Math.random()*10));\r",
									"pm.environment.set(\"fechaSolicitante\", fecha)\r",
									"var schemaRespuesta = {\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"codigoExpediente\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"fechaNacimiento\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"codigoEntidad\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"codigoExpediente\",\r",
									"    \"fechaNacimiento\",\r",
									"    \"codigoEntidad\"\r",
									"  ]\r",
									"};\r",
									"pm.variables.set(\"schemaRespuesta\", schemaRespuesta);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var schemaResultado = pm.variables.get(\"schemaRespuesta\");\r",
									"const response = pm.response;\r",
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response schema JSON\",()=>{\r",
									"    pm.expect(responseData).to.have.jsonSchema(schemaResultado);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {    \r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('codigoExpediente');\r",
									"    pm.expect(responseData).to.have.property('fechaNacimiento');\r",
									"    pm.expect(responseData).to.have.property('codigoEntidad');\r",
									"});\r",
									"\r",
									"pm.test(\"CodigoExpediente, fechaNacimiento and codigoEntidad are non-empty strings\", function () {        \r",
									"    pm.expect(responseData.codigoExpediente).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"CodigoExpediente should not be empty\");\r",
									"    pm.expect(responseData.fechaNacimiento).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"FechaNacimiento should not be empty\");\r",
									"    pm.expect(responseData.codigoEntidad).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"DodigoEntidad should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"CodigoExpediente, fechaNacimiento and codigoEntidad are correctly\", function () {        \r",
									"    pm.expect(responseData.codigoExpediente).equals(pm.variables.get(\"solicitante\"));\r",
									"    pm.expect(responseData.fechaNacimiento).equals(pm.variables.get(\"fechaSolicitante\"));\r",
									"    pm.expect(responseData.codigoEntidad).equals(\"IMSERSO\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{solicitante}}\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\",\r\n    \"fechaNacimiento\":\"{{fechaSolicitante}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}solicitante/crearSolicitante"
					},
					"response": []
				},
				{
					"name": "crearSolicitanteKOcodigoExpedienteExistente",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseJson).to.be.an('object');\r",
									"    pm.expect(responseJson).to.have.property('mensaje');\r",
									"    pm.expect(responseJson).to.have.property('codigo');\r",
									"    pm.expect(responseJson).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {\r",
									"    pm.expect(responseJson.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty\");\r",
									"    pm.expect(responseJson.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"    pm.expect(responseJson.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {     \r",
									"    pm.expect(responseJson.mensaje).equals(\"Se ha producido un error en la creción del solicitante\");\r",
									"    pm.expect(responseJson.codigo).equals(\"SOL007\");\r",
									"    pm.expect(responseJson.detalles).equals(\"Ya existe otro expediente con el mismo código guardado previamente.\");\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{solicitante}}\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\",\r\n    \"fechaNacimiento\":\"{{fechaSolicitante}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}solicitante/crearSolicitante"
					},
					"response": []
				},
				{
					"name": "crearSolicitanteKOcodigoExpedienteInexistente",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseJson).to.be.an('object');\r",
									"    pm.expect(responseJson).to.have.property('mensaje');\r",
									"    pm.expect(responseJson).to.have.property('codigo');\r",
									"    pm.expect(responseJson).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {     \r",
									"    pm.expect(responseJson.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty\");\r",
									"    pm.expect(responseJson.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"    pm.expect(responseJson.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {       \r",
									"    pm.expect(responseJson.mensaje).equals(\"Se han producido errores en la creación del solicitante\");\r",
									"    pm.expect(responseJson.codigo).equals(\"SOL001\");\r",
									"    pm.expect(responseJson.detalles).equals(\"El parámetro 'codigoExpediente' es obligatorio\");\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\",\r\n    \"fechaNacimiento\":\"{{fechaSolicitante}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}solicitante/crearSolicitante"
					},
					"response": []
				},
				{
					"name": "crearSolicitanteKOcodigoExpedienteVacio",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseJson).to.be.an('object');\r",
									"    pm.expect(responseJson).to.have.property('mensaje');\r",
									"    pm.expect(responseJson).to.have.property('codigo');\r",
									"    pm.expect(responseJson).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {        \r",
									"    pm.expect(responseJson.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty\");\r",
									"    pm.expect(responseJson.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"    pm.expect(responseJson.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {        \r",
									"    pm.expect(responseJson.mensaje).equals(\"Se han producido errores en la creación del solicitante\");\r",
									"    pm.expect(responseJson.codigo).equals(\"SOL001\");\r",
									"    pm.expect(responseJson.detalles).equals(\"El parámetro 'codigoExpediente' es obligatorio\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\",\r\n    \"fechaNacimiento\":\"{{fechaSolicitante}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}solicitante/crearSolicitante"
					},
					"response": []
				},
				{
					"name": "crearSolicitanteKOcodigoExpedienteMayor255",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseJson).to.be.an('object');\r",
									"    pm.expect(responseJson).to.have.property('mensaje');\r",
									"    pm.expect(responseJson).to.have.property('codigo');\r",
									"    pm.expect(responseJson).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {        \r",
									"    pm.expect(responseJson.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty\");\r",
									"    pm.expect(responseJson.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"    pm.expect(responseJson.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {       \r",
									"    pm.expect(responseJson.mensaje).equals(\"Se han producido errores en la creación del solicitante\");\r",
									"    pm.expect(responseJson.codigo).equals(\"SOL002\");\r",
									"    pm.expect(responseJson.detalles).equals(\"El parámetro 'codigoExpediente' debe tener como máximo 255 caracteres\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{mayor255}}\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\",\r\n    \"fechaNacimiento\":\"{{fechaSolicitante}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}solicitante/crearSolicitante"
					},
					"response": []
				},
				{
					"name": "crearSolicitanteKOcodigoEntidadInexistente",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseJson).to.be.an('object');\r",
									"    pm.expect(responseJson).to.have.property('mensaje');\r",
									"    pm.expect(responseJson).to.have.property('codigo');\r",
									"    pm.expect(responseJson).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {       \r",
									"    pm.expect(responseJson.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty\");\r",
									"    pm.expect(responseJson.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"    pm.expect(responseJson.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {        \r",
									"    pm.expect(responseJson.mensaje).equals(\"Se han producido errores en la creación del solicitante\");\r",
									"    pm.expect(responseJson.codigo).equals(\"SOL003\");\r",
									"    pm.expect(responseJson.detalles).equals(\"El parámetro 'codigoEntidad' es obligatorio\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{solicitante}}\",\r\n    \"fechaNacimiento\":\"{{fechaSolicitante}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}solicitante/crearSolicitante"
					},
					"response": []
				},
				{
					"name": "crearSolicitanteKOcodigoEntidadVacio",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseJson).to.be.an('object');\r",
									"    pm.expect(responseJson).to.have.property('mensaje');\r",
									"    pm.expect(responseJson).to.have.property('codigo');\r",
									"    pm.expect(responseJson).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {        \r",
									"    pm.expect(responseJson.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty\");\r",
									"    pm.expect(responseJson.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"    pm.expect(responseJson.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {        \r",
									"    pm.expect(responseJson.mensaje).equals(\"Se han producido errores en la creación del solicitante\");\r",
									"    pm.expect(responseJson.codigo).equals(\"SOL003\");\r",
									"    pm.expect(responseJson.detalles).equals(\"El parámetro 'codigoEntidad' es obligatorio\");\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{solicitante}}\",\r\n    \"codigoEntidad\":\"\",\r\n    \"fechaNacimiento\":\"{{fechaSolicitante}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}solicitante/crearSolicitante"
					},
					"response": []
				},
				{
					"name": "crearSolicitanteKOcodigoEntidadMayor50",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseJson).to.be.an('object');\r",
									"    pm.expect(responseJson).to.have.property('mensaje');\r",
									"    pm.expect(responseJson).to.have.property('codigo');\r",
									"    pm.expect(responseJson).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {        \r",
									"    pm.expect(responseJson.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty\");\r",
									"    pm.expect(responseJson.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"    pm.expect(responseJson.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {       \r",
									"    pm.expect(responseJson.mensaje).equals(\"Se han producido errores en la creación del solicitante\");\r",
									"    pm.expect(responseJson.codigo).equals(\"SOL004\");\r",
									"    pm.expect(responseJson.detalles).equals(\"El parámetro 'codigoEntidad' debe tener como máximo 50 caracteres\");\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{solicitante}}\",\r\n    \"codigoEntidad\":\"{{mayor255}}\",\r\n    \"fechaNacimiento\":\"{{fechaSolicitante}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}solicitante/crearSolicitante"
					},
					"response": []
				},
				{
					"name": "crearSolicitanteKOcodigoEntidadErronea",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseJson).to.be.an('object');\r",
									"    pm.expect(responseJson).to.have.property('mensaje');\r",
									"    pm.expect(responseJson).to.have.property('codigo');\r",
									"    pm.expect(responseJson).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {        \r",
									"    pm.expect(responseJson.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty\");\r",
									"    pm.expect(responseJson.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"    pm.expect(responseJson.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {       \r",
									"    pm.expect(responseJson.mensaje).equals(\"Se ha producido un error en la creción del solicitante\");\r",
									"    pm.expect(responseJson.codigo).equals(\"SOL010\");\r",
									"    pm.expect(responseJson.detalles).equals(\"No existe ninguna entidad gestora con el código proporcionado.\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{solicitante}}\",\r\n    \"codigoEntidad\":\"{{valorAleatorio}}\",\r\n    \"fechaNacimiento\":\"{{fechaSolicitante}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}solicitante/crearSolicitante"
					},
					"response": []
				},
				{
					"name": "crearSolicitanteKOfechaNacimientoInexistente",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseJson).to.be.an('object');\r",
									"    pm.expect(responseJson).to.have.property('mensaje');\r",
									"    pm.expect(responseJson).to.have.property('codigo');\r",
									"    pm.expect(responseJson).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {\r",
									"    pm.expect(responseJson.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty\");\r",
									"    pm.expect(responseJson.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"    pm.expect(responseJson.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {\r",
									"    pm.expect(responseJson.mensaje).equals(\"Se han producido errores en la creación del solicitante\");\r",
									"    pm.expect(responseJson.codigo).equals(\"SOL005\");\r",
									"    pm.expect(responseJson.detalles).equals(\"El parámetro 'fechaNacimiento' es obligatorio\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{solicitante}}\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}solicitante/crearSolicitante"
					},
					"response": []
				},
				{
					"name": "crearSolicitanteKOfechaNacimientoVacio",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseJson).to.be.an('object');\r",
									"    pm.expect(responseJson).to.have.property('mensaje');\r",
									"    pm.expect(responseJson).to.have.property('codigo');\r",
									"    pm.expect(responseJson).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {       \r",
									"    pm.expect(responseJson.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty\");\r",
									"    pm.expect(responseJson.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"    pm.expect(responseJson.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {       \r",
									"    pm.expect(responseJson.mensaje).equals(\"Se ha producido un error en la creción del solicitante\");\r",
									"    pm.expect(responseJson.codigo).equals(\"SOL009\");\r",
									"    pm.expect(responseJson.detalles).equals(\"Formato de fecha incorrecto (formato dd/MM/yyyy).\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{solicitante}}\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\",\r\n    \"fechaNacimiento\":\"\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}solicitante/crearSolicitante"
					},
					"response": []
				},
				{
					"name": "crearSolicitanteKOfechaNacimientoMalFormato",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseJson).to.be.an('object');\r",
									"    pm.expect(responseJson).to.have.property('mensaje');\r",
									"    pm.expect(responseJson).to.have.property('codigo');\r",
									"    pm.expect(responseJson).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {      \r",
									"    pm.expect(responseJson.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty\");\r",
									"    pm.expect(responseJson.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"    pm.expect(responseJson.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {    \r",
									"    pm.expect(responseJson.mensaje).equals(\"Se ha producido un error en la creción del solicitante\");\r",
									"    pm.expect(responseJson.codigo).equals(\"SOL009\");\r",
									"    pm.expect(responseJson.detalles).equals(\"Formato de fecha incorrecto (formato dd/MM/yyyy).\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{solicitante}}\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\",\r\n    \"fechaNacimiento\":\"{{valorAleatorio}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}solicitante/crearSolicitante"
					},
					"response": []
				},
				{
					"name": "crearSolicitanteKOfechaNacimientoPosteriorFechaActual",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var moment = require(\"moment\");\r",
									"pm.variables.set(\"currentdate\",moment().subtract(\"day\",-1).format((\"DD/MM/YYYY\")));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseJson).to.be.an('object');\r",
									"    pm.expect(responseJson).to.have.property('mensaje');\r",
									"    pm.expect(responseJson).to.have.property('codigo');\r",
									"    pm.expect(responseJson).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {        \r",
									"    pm.expect(responseJson.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty\");\r",
									"    pm.expect(responseJson.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"    pm.expect(responseJson.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {       \r",
									"    pm.expect(responseJson.mensaje).equals(\"Se ha producido un error en la creción del solicitante\");\r",
									"    pm.expect(responseJson.codigo).equals(\"SOL008\");\r",
									"    pm.expect(responseJson.detalles).equals(\"Fecha de nacimiento posterior a la fecha actual.\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{solicitante}}\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\",\r\n    \"fechaNacimiento\":\"{{currentdate}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}solicitante/crearSolicitante"
					},
					"response": []
				}
			]
		},
		{
			"name": "getSolicitante",
			"item": [
				{
					"name": "getSolicitanteOK",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"    const responseData = pm.response.json();\r",
									"\r",
									"    pm.test(\"Status code is 200\", function () {\r",
									"        pm.response.to.have.status(200);\r",
									"    });\r",
									"\r",
									"    pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"        pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"    });\r",
									"\r",
									"    pm.test(\"Response has the required fields\", function () {\r",
									"        pm.expect(responseData).to.be.an('object');\r",
									"        pm.expect(responseData).to.have.property('codigoExpediente');\r",
									"        pm.expect(responseData).to.have.property('fechaNacimiento');\r",
									"        pm.expect(responseData).to.have.property('codigoEntidad');\r",
									"    });\r",
									"\r",
									"    pm.test(\"CodigoExpediente, fechaNacimiento and codigoEntidad are non-empty strings\", function () {\r",
									"        pm.expect(responseData.codigoExpediente).to.be.a('string').and.to.have.lengthOf.at.least(1, \"CodigoExpediente should not be empty string\");\r",
									"        pm.expect(responseData.fechaNacimiento).to.be.a('string').and.to.have.lengthOf.at.least(1, \"FechaNacimiento should not be empty string\");\r",
									"        pm.expect(responseData.codigoEntidad).to.be.a('string').and.to.have.lengthOf.at.least(1, \"CodigoEntidad should not be empty string\");\r",
									"    });\r",
									"\r",
									"    pm.test(\"CodigoExpediente, fechaNacimiento and codigoEntidad are correctly\", function () {\r",
									"        pm.expect(responseData.codigoExpediente).equals(pm.variables.get(\"solicitante\"));\r",
									"        pm.expect(responseData.fechaNacimiento).equals(pm.variables.get(\"fechaSolicitante\"));\r",
									"        pm.expect(responseData.codigoEntidad).equals(pm.variables.get(\"codigoEntidadImserso\"));\r",
									"    });\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{solicitante}}\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}solicitante/getSolicitante"
					},
					"response": []
				},
				{
					"name": "getSolicitanteKOcodigoExpedienteInexistente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response status code is 400\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields - mensaje, codigo, and detalles\", function () {\r",
									"  pm.expect(responseData).to.be.an('object');\r",
									"  pm.expect(responseData).to.have.property('mensaje');\r",
									"  pm.expect(responseData).to.have.property('codigo');\r",
									"  pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo, and detalles are a non-empty string\", function () {\r",
									"    pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty string\");\r",
									"    pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should be a non-empty string\");\r",
									"    pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should be a non-empty string\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo, and detalles are correct\", function () {\r",
									"    pm.expect(responseData.mensaje).to.equal('Se han producido errores en la actualización del solicitante');\r",
									"    pm.expect(responseData.detalles).to.equal('El parámetro \\'codigoExpediente\\' es obligatorio');\r",
									"    pm.expect(responseData.codigo).to.equal('SOL001');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}solicitante/getSolicitante"
					},
					"response": []
				},
				{
					"name": "getSolicitanteKOcodigoExpedienteVacio",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response status code is 400\", function () {\r",
									"  pm.expect(pm.response.code).to.equal(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields - mensaje, codigo, and detalles\", function () {       \r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData.mensaje).to.exist;\r",
									"    pm.expect(responseData.codigo).to.exist;\r",
									"    pm.expect(responseData.detalles).to.exist;\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo, and detalles are a non-empty string\", function () {\r",
									"    pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty string\");\r",
									"    pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should be a non-empty string\");\r",
									"    pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should be a non-empty string\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo, and detalles are correct\", function () {\r",
									"    pm.expect(responseData.mensaje).to.equal('Se han producido errores en la actualización del solicitante');\r",
									"    pm.expect(responseData.detalles).to.equal('El parámetro \\'codigoExpediente\\' es obligatorio');\r",
									"    pm.expect(responseData.codigo).to.equal('SOL001');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}solicitante/getSolicitante"
					},
					"response": []
				},
				{
					"name": "getSolicitanteKOcodigoExpedienteIncorrecto",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response status code is 400\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Validate the response content type is application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo, and detalles are a non-empty string\", function () {\r",
									"    pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Message should not be empty\");\r",
									"    pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Details should not be empty\");\r",
									"    pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Details should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo, and detalles are correct\", function () {\r",
									"    pm.expect(responseData.mensaje).equals(\"Se ha producido un error en la obtención de los datos del solicitante\");\r",
									"    pm.expect(responseData.detalles).equals(\"No existe ningún expediente con el código proporcionado.\");\r",
									"    pm.expect(responseData.codigo).equals(\"SOL011\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{valorAleatorio}}\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}solicitante/getSolicitante"
					},
					"response": []
				},
				{
					"name": "getSolicitanteKOcodigoExpedienteMayor255",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response status code is 400\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"  pm.expect(responseData).to.be.an('object');\r",
									"  pm.expect(responseData.mensaje).to.exist;\r",
									"  pm.expect(responseData.codigo).to.exist;\r",
									"  pm.expect(responseData.detalles).to.exist;\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo, and detalles are a non-empty string\", function () {\r",
									"  pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty\");\r",
									"  pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"  pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo, and detalles are correct\", function () {\r",
									"  pm.expect(responseData.mensaje).equals(\"Se han producido errores en la actualización del solicitante\");\r",
									"  pm.expect(responseData.detalles).equals(\"El parámetro 'codigoExpediente' debe tener como máximo 255 caracteres\");\r",
									"  pm.expect(responseData.codigo).equals(\"SOL002\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{mayor255}}\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}solicitante/getSolicitante"
					},
					"response": []
				},
				{
					"name": "getSolicitanteKOcodigoEntidadInexistente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response status code is 400\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"  pm.expect(responseData).to.be.an('object');\r",
									"  pm.expect(responseData).to.have.property('mensaje');\r",
									"  pm.expect(responseData).to.have.property('codigo');\r",
									"  pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo, and detalles are a non-empty string\", function () {\r",
									"  pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty\");\r",
									"  pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty\");\r",
									"  pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo, and detalles are correct\", function () {\r",
									"  pm.expect(responseData.mensaje).to.equal(\"Se han producido errores en la actualización del solicitante\");\r",
									"  pm.expect(responseData.detalles).to.equal(\"El parámetro 'codigoEntidad' es obligatorio\");\r",
									"  pm.expect(responseData.codigo).to.equal(\"SOL003\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{solicitante}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}solicitante/getSolicitante"
					},
					"response": []
				},
				{
					"name": "getSolicitanteKOcodigoEntidadVacio",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response status code is 400\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"  pm.expect(responseData).to.be.an('object');\r",
									"  pm.expect(responseData).to.have.property('mensaje');\r",
									"  pm.expect(responseData).to.have.property('codigo');\r",
									"  pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo, and detalles are a non-empty string\", function () {\r",
									"  pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty\");\r",
									"  pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty\");\r",
									"  pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo, and detalles are correct\", function () {\r",
									"  pm.expect(responseData.mensaje).to.equal(\"Se han producido errores en la actualización del solicitante\");\r",
									"  pm.expect(responseData.detalles).to.equal(\"El parámetro 'codigoEntidad' es obligatorio\");\r",
									"  pm.expect(responseData.codigo).to.equal(\"SOL003\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{solicitante}}\",\r\n    \"codigoEntidad\":\"\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}solicitante/getSolicitante"
					},
					"response": []
				},
				{
					"name": "getSolicitanteKOcodigoEntidadIncorrecto",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response status code is 400\", function () {\r",
									"  pm.expect(pm.response.code).to.equal(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"  pm.expect(responseData).to.be.an('object');\r",
									"  pm.expect(responseData).to.have.property('mensaje');\r",
									"  pm.expect(responseData).to.have.property('codigo');\r",
									"  pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo, and detalles are a non-empty string\", function () {\r",
									"  pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty\");\r",
									"  pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"  pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo, and detalles are correct\", function () {\r",
									"  pm.expect(responseData.mensaje).equals(\"Se ha producido un error en la creción del solicitante\");\r",
									"  pm.expect(responseData.detalles).equals(\"No existe ninguna entidad gestora con el código proporcionado.\");\r",
									"  pm.expect(responseData.codigo).equals(\"SOL010\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{solicitante}}\",\r\n    \"codigoEntidad\":\"{{valorAleatorio}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}solicitante/getSolicitante"
					},
					"response": []
				},
				{
					"name": "getSolicitanteKOcodigoEntidadMayor50",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response status code is 400\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields - mensaje, codigo, and detalles\", function () {\r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData.mensaje).to.exist;\r",
									"    pm.expect(responseData.codigo).to.exist;\r",
									"    pm.expect(responseData.detalles).to.exist;\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo, and detalles are a non-empty string\", function () {\r",
									"  pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty\");\r",
									"  pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"  pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo, and detalles are correct\", function () {\r",
									"  pm.expect(responseData.mensaje).equals(\"Se han producido errores en la actualización del solicitante\");\r",
									"  pm.expect(responseData.detalles).equals(\"El parámetro \\'codigoEntidad\\' debe tener como máximo 50 caracteres\");\r",
									"  pm.expect(responseData.codigo).equals(\"SOL004\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{solicitante}}\",\r\n    \"codigoEntidad\":\"{{mayor255}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}solicitante/getSolicitante"
					},
					"response": []
				}
			]
		},
		{
			"name": "getResultado",
			"item": [
				{
					"name": "getResultadoOK",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var schemaRespuestaOK = pm.variables.get(\"schemaRespuestaOK\");\r",
									"\r",
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test('Response status code is 200', function () {\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"pm.test('Content-Type header is application/json', function () {\r",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
									"})\r",
									"\r",
									"pm.test('InformacionClinica array is present and not empty', function () {\r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData.informacionClinica).to.exist.and.to.be.an('array').and.to.have.lengthOf.at.least(1, 'Array should not be empty');\r",
									"})\r",
									"\r",
									"pm.test(\"Response schema json\",()=> {\r",
									"    pm.expect(responseData).to.have.jsonSchema(schemaRespuestaOK);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var schemaRespuestaOK = {\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"resultadoEvaluacion\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"codigoExpediente\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"fechaNacimiento\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"codigoEntidad\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"puntuacionGDA\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"gradoFinalDiscapacidad\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"fechaValoracion\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"isRevisable\": {\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"fechaRevision\": {\r",
									"          \"type\": \"null\"\r",
									"        },\r",
									"        \"valoracionFinalizada\": {\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"usuarioFinalizacion\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"fechaFinalizacion\": {\r",
									"          \"type\": \"string\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"codigoExpediente\",\r",
									"        \"fechaNacimiento\",\r",
									"        \"codigoEntidad\",\r",
									"        \"puntuacionGDA\",\r",
									"        \"gradoFinalDiscapacidad\",\r",
									"        \"fechaValoracion\",\r",
									"        \"isRevisable\",\r",
									"        \"fechaRevision\",\r",
									"        \"valoracionFinalizada\",\r",
									"        \"usuarioFinalizacion\",\r",
									"        \"fechaFinalizacion\"\r",
									"      ]\r",
									"    },\r",
									"    \"informacionClinica\": {\r",
									"      \"type\": \"array\",\r",
									"      \"items\": [\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"codigoCie10\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"posicionCie10\": {\r",
									"              \"type\": \"integer\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"codigoCie10\",\r",
									"            \"posicionCie10\"\r",
									"          ]\r",
									"        }\r",
									"      ]\r",
									"    },\r",
									"    \"deficienciasSalud\": {\r",
									"      \"type\": \"array\",\r",
									"      \"items\": {}\r",
									"    },\r",
									"    \"baremoBLA\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"limitacionGlobalPersona\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"limitacionGraveAutocuidado\": {\r",
									"          \"type\": \"null\"\r",
									"        },\r",
									"        \"limitacionEnMovilidad\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"baremoBlaValido\": {\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"usoBlgtaa\": {\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"baremoBlgtaPrincipal\": {\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"baremoBlaPrincipal\": {\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"baremoBlaSecundario\": {\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"baremoBlaIncluido\": {\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"motivoNoInclusionBla\": {\r",
									"          \"type\": \"null\"\r",
									"        },\r",
									"        \"puntuacionesDominios\": {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"1\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"2\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"3\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"4\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"5\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"6\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"7\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"8\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"9\": {\r",
									"              \"type\": \"integer\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"1\",\r",
									"            \"2\",\r",
									"            \"3\",\r",
									"            \"4\",\r",
									"            \"5\",\r",
									"            \"6\",\r",
									"            \"7\",\r",
									"            \"8\",\r",
									"            \"9\"\r",
									"          ]\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"limitacionGlobalPersona\",\r",
									"        \"limitacionGraveAutocuidado\",\r",
									"        \"limitacionEnMovilidad\",\r",
									"        \"baremoBlaValido\",\r",
									"        \"usoBlgtaa\",\r",
									"        \"baremoBlgtaPrincipal\",\r",
									"        \"baremoBlaPrincipal\",\r",
									"        \"baremoBlaSecundario\",\r",
									"        \"baremoBlaIncluido\",\r",
									"        \"motivoNoInclusionBla\",\r",
									"        \"puntuacionesDominios\"\r",
									"      ]\r",
									"    },\r",
									"    \"baremoBDGP\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"deficienciaGlobalPersona\": {\r",
									"          \"type\": \"null\"\r",
									"        },\r",
									"        \"baremoBdgpPrincipal\": {\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"baremoBdgpSecundario\": {\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"deficienciaUnica\": {\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"baramoBdgpIncluido\": {\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"motivoNoInclusionBdgp\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"motivoNoPrincipalBdgp\": {\r",
									"          \"type\": \"null\"\r",
									"        },\r",
									"        \"puntuacionesDominios\": {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"1\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"2\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"3\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"4\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"5\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"6\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"7\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"8\": {\r",
									"              \"type\": \"integer\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"1\",\r",
									"            \"2\",\r",
									"            \"3\",\r",
									"            \"4\",\r",
									"            \"5\",\r",
									"            \"6\",\r",
									"            \"7\",\r",
									"            \"8\"\r",
									"          ]\r",
									"        },\r",
									"        \"puntuacionesCapitulos\": {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"01\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"02\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"03\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"04\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"05\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"06\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"07\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"08\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"09\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"10\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"11\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"12\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"13\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"14\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"15\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"16\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"17\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"18\": {\r",
									"              \"type\": \"null\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"01\",\r",
									"            \"02\",\r",
									"            \"03\",\r",
									"            \"04\",\r",
									"            \"05\",\r",
									"            \"06\",\r",
									"            \"07\",\r",
									"            \"08\",\r",
									"            \"09\",\r",
									"            \"10\",\r",
									"            \"11\",\r",
									"            \"12\",\r",
									"            \"13\",\r",
									"            \"14\",\r",
									"            \"15\",\r",
									"            \"16\",\r",
									"            \"17\",\r",
									"            \"18\"\r",
									"          ]\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"deficienciaGlobalPersona\",\r",
									"        \"baremoBdgpPrincipal\",\r",
									"        \"baremoBdgpSecundario\",\r",
									"        \"deficienciaUnica\",\r",
									"        \"baramoBdgpIncluido\",\r",
									"        \"motivoNoInclusionBdgp\",\r",
									"        \"motivoNoPrincipalBdgp\",\r",
									"        \"puntuacionesDominios\",\r",
									"        \"puntuacionesCapitulos\"\r",
									"      ]\r",
									"    },\r",
									"    \"baremoBRP\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"restriccionGlobalPersona\": {\r",
									"          \"type\": \"null\"\r",
									"        },\r",
									"        \"baremoBrpValido\": {\r",
									"          \"type\": \"null\"\r",
									"        },\r",
									"        \"baremoBrpSecundario\": {\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"baremoBrpAnulado\": {\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"baramoBrpIncluido\": {\r",
									"          \"type\": \"null\"\r",
									"        },\r",
									"        \"motivoNoInclusionBrp\": {\r",
									"          \"type\": \"null\"\r",
									"        },\r",
									"        \"puntuacionesDominios\": {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"1\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"2\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"3\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"4\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"5\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"6\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"7\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"8\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"9\": {\r",
									"              \"type\": \"null\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"1\",\r",
									"            \"2\",\r",
									"            \"3\",\r",
									"            \"4\",\r",
									"            \"5\",\r",
									"            \"6\",\r",
									"            \"7\",\r",
									"            \"8\",\r",
									"            \"9\"\r",
									"          ]\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"restriccionGlobalPersona\",\r",
									"        \"baremoBrpValido\",\r",
									"        \"baremoBrpSecundario\",\r",
									"        \"baremoBrpAnulado\",\r",
									"        \"baramoBrpIncluido\",\r",
									"        \"motivoNoInclusionBrp\",\r",
									"        \"puntuacionesDominios\"\r",
									"      ]\r",
									"    },\r",
									"    \"baremoBFCA\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"puntuacioPorBarrerasEntorno\": {\r",
									"          \"type\": \"null\"\r",
									"        },\r",
									"        \"baremoBfcaSecundario\": {\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"baramoBfcaIncluido\": {\r",
									"          \"type\": \"null\"\r",
									"        },\r",
									"        \"motivoNoInclusionBfca\": {\r",
									"          \"type\": \"null\"\r",
									"        },\r",
									"        \"puntuacionesDominios\": {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"1\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"2\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"3\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"4\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"5\": {\r",
									"              \"type\": \"null\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"1\",\r",
									"            \"2\",\r",
									"            \"3\",\r",
									"            \"4\",\r",
									"            \"5\"\r",
									"          ]\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"puntuacioPorBarrerasEntorno\",\r",
									"        \"baremoBfcaSecundario\",\r",
									"        \"baramoBfcaIncluido\",\r",
									"        \"motivoNoInclusionBfca\",\r",
									"        \"puntuacionesDominios\"\r",
									"      ]\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"resultadoEvaluacion\",\r",
									"    \"informacionClinica\",\r",
									"    \"deficienciasSalud\",\r",
									"    \"baremoBLA\",\r",
									"    \"baremoBDGP\",\r",
									"    \"baremoBRP\",\r",
									"    \"baremoBFCA\"\r",
									"  ]\r",
									"};\r",
									"pm.variables.set(\"schemaRespuestaOK\",schemaRespuestaOK,Object);"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{expedienteFinalizado}}\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/getResultado"
					},
					"response": []
				},
				{
					"name": "getResultadoKOEvalNoFinalizadaSinGFDP",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response status code is 400\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {\r",
									"    pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Message should not be empty\");\r",
									"    pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"    pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {\r",
									"    pm.expect(responseData.mensaje).equals(\"Se ha producido un error en la obtención del resultado de la evaluación\");\r",
									"    pm.expect(responseData.detalles).equals(\"No se ha finalizado la valoración de discapacidad del solicitante\");\r",
									"    pm.expect(responseData.codigo).equals(\"EVAL001\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{expedienteSinGFDP}}\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/getResultado"
					},
					"response": []
				},
				{
					"name": "getResultadoKOcodigoExpedienteInexistente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response status code is 400\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {\r",
									"    pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Message should not be empty\");\r",
									"    pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"    pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {\r",
									"  pm.expect(responseData.mensaje).equals(\"Se han producido errores en la actualización del solicitante\");\r",
									"  pm.expect(responseData.detalles).equals(\"El parámetro \\'codigoExpediente\\' es obligatorio\");\r",
									"  pm.expect(responseData.codigo).equals(\"SOL001\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/getResultado"
					},
					"response": []
				},
				{
					"name": "getResultadoKOcodigoExpedienteVacio",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response status code is 400\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {\r",
									"    pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Message should not be empty\");\r",
									"    pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"    pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {\r",
									"  pm.expect(responseData.mensaje).equals(\"Se han producido errores en la actualización del solicitante\");\r",
									"  pm.expect(responseData.detalles).equals(\"El parámetro \\'codigoExpediente\\' es obligatorio\");\r",
									"  pm.expect(responseData.codigo).equals(\"SOL001\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n     \"codigoExpediente\":\"\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/getResultado"
					},
					"response": []
				},
				{
					"name": "getResultadoKOcodigoExpedienteIncorrecto",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response status code is 400\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {\r",
									"    pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Message should not be empty\");\r",
									"    pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"    pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {\r",
									"  pm.expect(responseData.mensaje).equals(\"Se ha producido un error en la obtención del resultado de la evaluación\");\r",
									"  pm.expect(responseData.detalles).equals(\"No existe ningún expediente con el código proporcionado.\");\r",
									"  pm.expect(responseData.codigo).equals(\"SOL011\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{valorAleatorio}}\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/getResultado"
					},
					"response": []
				},
				{
					"name": "getResultadoKOcodigoExpedienteMayor255",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response status code is 400\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {\r",
									"    pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Message should not be empty\");\r",
									"    pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"    pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {\r",
									"  pm.expect(responseData.mensaje).equals(\"Se han producido errores en la actualización del solicitante\");\r",
									"  pm.expect(responseData.detalles).equals(\"El parámetro 'codigoExpediente' debe tener como máximo 255 caracteres\");\r",
									"  pm.expect(responseData.codigo).equals(\"SOL002\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{mayor255}}\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/getResultado"
					},
					"response": []
				},
				{
					"name": "getResultadoKOcodigoEntidadMayor50",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response status code is 400\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {\r",
									"    pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Message should not be empty\");\r",
									"    pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"    pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {\r",
									"  pm.expect(responseData.mensaje).equals(\"Se han producido errores en la actualización del solicitante\");\r",
									"  pm.expect(responseData.detalles).equals(\"El parámetro 'codigoEntidad' debe tener como máximo 50 caracteres\");\r",
									"  pm.expect(responseData.codigo).equals(\"SOL004\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{solicitante}}\",\r\n    \"codigoEntidad\":\"{{mayor255}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/getResultado"
					},
					"response": []
				},
				{
					"name": "getResultadoKOcodigoEntidadVacia",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response status code is 400\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {\r",
									"    pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Message should not be empty\");\r",
									"    pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"    pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {\r",
									"  pm.expect(responseData.mensaje).equals(\"Se han producido errores en la actualización del solicitante\");\r",
									"  pm.expect(responseData.detalles).equals(\"El parámetro \\'codigoEntidad\\' es obligatorio\");\r",
									"  pm.expect(responseData.codigo).equals(\"SOL003\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{solicitante}}\",\r\n    \"codigoEntidad\":\"\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/getResultado"
					},
					"response": []
				},
				{
					"name": "getResultadoKOcodigoEntidadIncorrecta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response status code is 400\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {\r",
									"    pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Message should not be empty\");\r",
									"    pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"    pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {\r",
									"  pm.expect(responseData.mensaje).equals(\"Se ha producido un error en la obtención del resultado de la evaluación\");\r",
									"  pm.expect(responseData.detalles).equals(\"No existe ninguna entidad gestora con el código proporcionado.\");\r",
									"  pm.expect(responseData.codigo).equals(\"SOL010\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{solicitante}}\",\r\n    \"codigoEntidad\":\"{{valorAleatorio}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/getResultado"
					},
					"response": []
				},
				{
					"name": "getResultadoKOcodigoEntidadInexistente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response status code is 400\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {\r",
									"    pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Message should not be empty\");\r",
									"    pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"    pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje is a non-empty string\", function () {\r",
									"  pm.expect(responseData.mensaje).equals(\"Se han producido errores en la actualización del solicitante\");\r",
									"  pm.expect(responseData.detalles).equals(\"El parámetro \\'codigoEntidad\\' es obligatorio\");\r",
									"  pm.expect(responseData.codigo).equals(\"SOL003\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{expedienteFinalizado}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/getResultado"
					},
					"response": []
				},
				{
					"name": "getResultadoKOcodigoEntidadInexistente Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response status code is 400\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {\r",
									"    pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Message should not be empty\");\r",
									"    pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"    pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje is a non-empty string\", function () {\r",
									"  pm.expect(responseData.mensaje).equals(\"Se han producido errores en la actualización del solicitante\");\r",
									"  pm.expect(responseData.detalles).equals(\"El parámetro \\'codigoEntidad\\' es obligatorio\");\r",
									"  pm.expect(responseData.codigo).equals(\"SOL003\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{expedienteFinalizado}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/getResultado"
					},
					"response": []
				}
			]
		},
		{
			"name": "getInformeSintesis",
			"item": [
				{
					"name": "getInformeSintesisOK",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var schemaRespuestaOk = {\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"informeSintesis\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"codigoExpediente\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"codigoEntidad\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"nombreEvaluador\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"nombreEvaluador1\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"nombreEvaluador2\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"nombreEvaluador3\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"edad\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"fechaRegistro\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"fechaEvaluacion\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"firma\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"fechaFirma\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"lugarExploracion\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"informacionClinica\": {\r",
									"          \"type\": \"array\",\r",
									"          \"items\": [\r",
									"            {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"codigoCie10\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"posicionCie10\": {\r",
									"                  \"type\": \"integer\"\r",
									"                },\r",
									"                \"incluidoInforme\": {\r",
									"                  \"type\": \"boolean\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"codigoCie10\",\r",
									"                \"posicionCie10\",\r",
									"                \"incluidoInforme\"\r",
									"              ]\r",
									"            }\r",
									"          ]\r",
									"        },\r",
									"        \"deficienciasSalud\": {\r",
									"          \"type\": \"array\",\r",
									"          \"items\": {}\r",
									"        },\r",
									"        \"criteriosEvaluacion\": {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"profesional1\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"historiaClinica\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"exploracionHallazgosExploracion\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"pruebasClinicasObjetivas\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"historiaFuncional\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"puntuacionCCT\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"interaccionDeficienciaLimitacionCapacidad\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"interaccionDeficienciaDesempeno\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"discusionCalculoDeficiencia\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"recomendacion\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"capacidadLaboral\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"historiaClinica\",\r",
									"                \"exploracionHallazgosExploracion\",\r",
									"                \"pruebasClinicasObjetivas\",\r",
									"                \"historiaFuncional\",\r",
									"                \"puntuacionCCT\",\r",
									"                \"interaccionDeficienciaLimitacionCapacidad\",\r",
									"                \"interaccionDeficienciaDesempeno\",\r",
									"                \"discusionCalculoDeficiencia\",\r",
									"                \"recomendacion\",\r",
									"                \"capacidadLaboral\"\r",
									"              ]\r",
									"            },\r",
									"            \"profesional2\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"historiaClinica\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"exploracionHallazgosExploracion\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"pruebasClinicasObjetivas\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"historiaFuncional\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"puntuacionCCT\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"interaccionDeficienciaLimitacionCapacidad\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"interaccionDeficienciaDesempeno\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"discusionCalculoDeficiencia\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"recomendacion\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"capacidadLaboral\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"historiaClinica\",\r",
									"                \"exploracionHallazgosExploracion\",\r",
									"                \"pruebasClinicasObjetivas\",\r",
									"                \"historiaFuncional\",\r",
									"                \"puntuacionCCT\",\r",
									"                \"interaccionDeficienciaLimitacionCapacidad\",\r",
									"                \"interaccionDeficienciaDesempeno\",\r",
									"                \"discusionCalculoDeficiencia\",\r",
									"                \"recomendacion\",\r",
									"                \"capacidadLaboral\"\r",
									"              ]\r",
									"            },\r",
									"            \"justificacionPuntuacionBDGP\": {\r",
									"              \"type\": \"array\",\r",
									"              \"items\": [\r",
									"                {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"motivoNoInclusion\": {\r",
									"                      \"type\": \"null\"\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"motivoNoInclusion\"\r",
									"                  ]\r",
									"                },\r",
									"                {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"codigoCie10\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"codigoCapitulo\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"cifCapitulo\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"codigoTabla\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"viad\": {\r",
									"                      \"type\": \"object\",\r",
									"                      \"properties\": {\r",
									"                        \"0\": {\r",
									"                          \"type\": \"string\"\r",
									"                        },\r",
									"                        \"1\": {\r",
									"                          \"type\": \"string\"\r",
									"                        },\r",
									"                        \"2\": {\r",
									"                          \"type\": \"string\"\r",
									"                        },\r",
									"                        \"3\": {\r",
									"                          \"type\": \"string\"\r",
									"                        },\r",
									"                        \"4 DI GRAVE\": {\r",
									"                          \"type\": \"string\"\r",
									"                        },\r",
									"                        \"4 DI PROFUNDA\": {\r",
									"                          \"type\": \"string\"\r",
									"                        }\r",
									"                      },\r",
									"                      \"required\": [\r",
									"                        \"0\",\r",
									"                        \"1\",\r",
									"                        \"2\",\r",
									"                        \"3\",\r",
									"                        \"4 DI GRAVE\",\r",
									"                        \"4 DI PROFUNDA\"\r",
									"                      ]\r",
									"                    },\r",
									"                    \"vigd\": {\r",
									"                      \"type\": \"array\",\r",
									"                      \"items\": [\r",
									"                        {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"0\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"1\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"2\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"3\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"4 DI GRAVE\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"4 DI PROFUNDA\": {\r",
									"                              \"type\": \"string\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"0\",\r",
									"                            \"1\",\r",
									"                            \"2\",\r",
									"                            \"3\",\r",
									"                            \"4 DI GRAVE\",\r",
									"                            \"4 DI PROFUNDA\"\r",
									"                          ]\r",
									"                        },\r",
									"                        {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"0\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"1\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"2\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"3\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"4 DI GRAVE\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"4 DI PROFUNDA\": {\r",
									"                              \"type\": \"string\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"0\",\r",
									"                            \"1\",\r",
									"                            \"2\",\r",
									"                            \"3\",\r",
									"                            \"4 DI GRAVE\",\r",
									"                            \"4 DI PROFUNDA\"\r",
									"                          ]\r",
									"                        },\r",
									"                        {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"0\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"1\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"2\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"3\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"4 DI GRAVE\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"4 DI PROFUNDA\": {\r",
									"                              \"type\": \"string\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"0\",\r",
									"                            \"1\",\r",
									"                            \"2\",\r",
									"                            \"3\",\r",
									"                            \"4 DI GRAVE\",\r",
									"                            \"4 DI PROFUNDA\"\r",
									"                          ]\r",
									"                        }\r",
									"                      ]\r",
									"                    },\r",
									"                    \"gdp\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"dtp\": {\r",
									"                      \"type\": \"string\"\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"codigoCie10\",\r",
									"                    \"codigoCapitulo\",\r",
									"                    \"cifCapitulo\",\r",
									"                    \"codigoTabla\",\r",
									"                    \"viad\",\r",
									"                    \"vigd\",\r",
									"                    \"gdp\",\r",
									"                    \"dtp\"\r",
									"                  ]\r",
									"                }\r",
									"              ]\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"profesional1\",\r",
									"            \"profesional2\",\r",
									"            \"justificacionPuntuacionBDGP\"\r",
									"          ]\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"codigoExpediente\",\r",
									"        \"codigoEntidad\",\r",
									"        \"nombreEvaluador\",\r",
									"        \"nombreEvaluador1\",\r",
									"        \"nombreEvaluador2\",\r",
									"        \"nombreEvaluador3\",\r",
									"        \"edad\",\r",
									"        \"fechaRegistro\",\r",
									"        \"fechaEvaluacion\",\r",
									"        \"firma\",\r",
									"        \"fechaFirma\",\r",
									"        \"lugarExploracion\",\r",
									"        \"informacionClinica\",\r",
									"        \"deficienciasSalud\",\r",
									"        \"criteriosEvaluacion\"\r",
									"      ]\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"informeSintesis\"\r",
									"  ]\r",
									"};\r",
									"pm.variables.set(\"schemaRespuestaOK\",schemaRespuestaOk,Object);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var schemaResultado = pm.variables.get('schemaRespuestaOK');\r",
									"\r",
									"const responseJson = pm.response.json();\r",
									"\r",
									"pm.test('Response status code is 200', function () {\r",
									"    pm.expect(pm.response.code).to.equal(200);\r",
									"})\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response schema JSON\",()=> {\r",
									"    pm.expect(responseJson).to.have.jsonSchema(schemaResultado);\r",
									"});\r",
									"\r",
									"pm.test('InformacionClinica array is present and contains at least one element', function () {\r",
									"    pm.expect(responseJson).to.be.an('object');\r",
									"    pm.expect(responseJson.informeSintesis.informacionClinica).to.exist.and.to.be.an('array').that.is.not.empty;\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{expedienteConIfSintesis}}\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/getInformeSintesis"
					},
					"response": []
				},
				{
					"name": "getInformeSintesisKOcodigoEntidadInexistente",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response status code is 400\", function () {\r",
									"  pm.expect(pm.response.code).to.equal(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty string\", function () { \r",
									"    pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty\");\r",
									"    pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"    pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {  \r",
									"    pm.expect(responseData.mensaje).equals(\"Se han producido errores en la actualización del solicitante\");\r",
									"    pm.expect(responseData.codigo).equals(\"SOL003\");\r",
									"    pm.expect(responseData.detalles).equals(\"El parámetro 'codigoEntidad' es obligatorio\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{expedienteConIfSintesis}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/getInformeSintesis"
					},
					"response": []
				},
				{
					"name": "getInformeSintesisKOcodigoEntidadVacio",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response status code is 400\", function () {\r",
									"  pm.expect(pm.response.code).to.equal(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty string\", function () { \r",
									"    pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty\");\r",
									"    pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"    pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {  \r",
									"    pm.expect(responseData.mensaje).equals(\"Se han producido errores en la actualización del solicitante\");\r",
									"    pm.expect(responseData.codigo).equals(\"SOL003\");\r",
									"    pm.expect(responseData.detalles).equals(\"El parámetro 'codigoEntidad' es obligatorio\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{expedienteConIfSintesis}}\",\r\n    \"codigoEntidad\":\"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/getInformeSintesis"
					},
					"response": []
				},
				{
					"name": "getInformeSintesisKOcodigoEntidadIncorrecto",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response status code is 400\", function () {\r",
									"  pm.expect(pm.response.code).to.equal(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty string\", function () { \r",
									"    pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty\");\r",
									"    pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"    pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {\r",
									"    pm.expect(responseData.mensaje).equals(\"Se ha producido un error en la obtención del resultado de la evaluación\");\r",
									"    pm.expect(responseData.codigo).equals(\"SOL010\");\r",
									"    pm.expect(responseData.detalles).equals(\"No existe ninguna entidad gestora con el código proporcionado.\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{expedienteConIfSintesis}}\",\r\n    \"codigoEntidad\":\"{{valorAleatorio}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/getInformeSintesis"
					},
					"response": []
				},
				{
					"name": "getInformeSintesisKOcodigoEntidadMayor50",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response status code is 400\", function () {\r",
									"  pm.expect(pm.response.code).to.equal(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty string\", function () { \r",
									"    pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty\");\r",
									"    pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"    pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {\r",
									"    pm.expect(responseData.mensaje).equals(\"Se han producido errores en la actualización del solicitante\");\r",
									"    pm.expect(responseData.codigo).equals(\"SOL004\");\r",
									"    pm.expect(responseData.detalles).equals(\"El parámetro 'codigoEntidad' debe tener como máximo 50 caracteres\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{expedienteConIfSintesis}}\",\r\n    \"codigoEntidad\":\"{{mayor255}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/getInformeSintesis"
					},
					"response": []
				},
				{
					"name": "getInformeSintesisKOcodigoExpedienteInexistente",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response status code is 400\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty string\", function () { \r",
									"    pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty\");\r",
									"    pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"    pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {\r",
									"  pm.expect(responseData.mensaje).equals(\"Se han producido errores en la actualización del solicitante\");\r",
									"  pm.expect(responseData.codigo).equals(\"SOL001\");\r",
									"  pm.expect(responseData.detalles).equals(\"El parámetro 'codigoExpediente' es obligatorio\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/getInformeSintesis"
					},
					"response": []
				},
				{
					"name": "getInformeSintesisKOcodigoExpedienteVacio",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response status code is 400\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty string\", function () { \r",
									"    pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty\");\r",
									"    pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"    pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {\r",
									"  pm.expect(responseData.mensaje).equals(\"Se han producido errores en la actualización del solicitante\");\r",
									"  pm.expect(responseData.codigo).equals(\"SOL001\");\r",
									"  pm.expect(responseData.detalles).equals(\"El parámetro 'codigoExpediente' es obligatorio\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/getInformeSintesis"
					},
					"response": []
				},
				{
					"name": "getInformeSintesisKOcodigoExpedienteIncorrecto",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response status code is 400\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty string\", function () { \r",
									"    pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty\");\r",
									"    pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"    pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {\r",
									"  pm.expect(responseData.mensaje).equals(\"Se ha producido un error en la obtención del resultado de la evaluación\");\r",
									"  pm.expect(responseData.codigo).equals(\"SOL011\");\r",
									"  pm.expect(responseData.detalles).equals(\"No existe ningún expediente con el código proporcionado.\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{valorAleatorio}}\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/getInformeSintesis"
					},
					"response": []
				},
				{
					"name": "getInformeSintesisKOcodigoExpedienteMayor255",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response status code is 400\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty string\", function () { \r",
									"    pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty\");\r",
									"    pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"    pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {\r",
									"  pm.expect(responseData.mensaje).equals(\"Se han producido errores en la actualización del solicitante\");\r",
									"  pm.expect(responseData.codigo).equals(\"SOL002\");\r",
									"  pm.expect(responseData.detalles).equals(\"El parámetro 'codigoExpediente' debe tener como máximo 255 caracteres\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{mayor255}}\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/getInformeSintesis"
					},
					"response": []
				},
				{
					"name": "getInformeSintesisKOsinInformeDeSintesis",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response status code is 400\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty string\", function () { \r",
									"    pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty\");\r",
									"    pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"    pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {\r",
									"  pm.expect(responseData.mensaje).equals(\"Se ha producido un error en la obtención del resultado de la evaluación\");\r",
									"  pm.expect(responseData.codigo).equals(\"INF001\");\r",
									"  pm.expect(responseData.detalles).equals(\"No se ha creado informe de sintesis para el expediente solicitado.\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{expedienteSinInformeDeSintesis}}\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/getInformeSintesis"
					},
					"response": []
				}
			]
		},
		{
			"name": "copiarValoracion",
			"item": [
				{
					"name": "copiarValoracionOK",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var random = Math.floor(Math.random()*1000);\r",
									"pm.variables.set(\"random\",random);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var schemaResultado = pm.variables.get(\"schemaRespuesta\");\r",
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('codigoExpediente');\r",
									"    pm.expect(responseData).to.have.property('fechaNacimiento');\r",
									"    pm.expect(responseData).to.have.property('codigoEntidad');\r",
									"});\r",
									"\r",
									"pm.test(\"CodigoExpediente, fechaNacimiento and codigoEntidad are non-empty strings\", function () { \r",
									"    pm.expect(responseData.codigoExpediente).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"CodigoExpediente should not be empty\");\r",
									"    pm.expect(responseData.fechaNacimiento).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"FechaNacimiento should not be empty\");\r",
									"    pm.expect(responseData.codigoEntidad).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"DodigoEntidad should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"CodigoExpediente, fechaNacimiento and codigoEntidad are correctly\", function () {\r",
									"    pm.expect(responseData.codigoExpediente).equals(pm.variables.get(\"expedienteFinalizado\")+pm.variables.get(\"random\"));\r",
									"    pm.expect(responseData.fechaNacimiento).equals(pm.variables.get(\"fechaNAciemientoExpedienteFinalizado\"));\r",
									"    pm.expect(responseData.codigoEntidad).equals(pm.variables.get(\"codigoEntidadImserso\"));\r",
									"});\r",
									"\r",
									"pm.sendRequest({\r",
									"    url:pm.variables.get(\"raiz\")+\"solicitante/eliminarValoracion\",\r",
									"    method:\"POST\",\r",
									"    header: \"Content-Type: application/json\",\r",
									"    body:{\r",
									"        mode: 'raw',\r",
									"        raw: JSON.stringify({\r",
									"        \"codigoExpediente\":pm.variables.get(\"expedienteFinalizado\")+pm.variables.get(\"random\"),\r",
									"        \"codigoEntidad\":pm.variables.get(\"codigoEntidadImserso\")})\r",
									"    }\r",
									"    }, function (err, response) {\r",
									"        pm.test(\"Response delete\", function () {\r",
									"            pm.expect(response.json().mensaje).to.exist.and.to.be.a('string').and.equals(\"Se ha borrado la valoración\");\r",
									"        });\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpedienteOrigen\":\"{{expedienteFinalizado}}\",\r\n    \"codigoExpedienteCopia\":\"{{expedienteFinalizado}}{{random}}\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}solicitante/copiarValoracion"
					},
					"response": []
				},
				{
					"name": "copiarValoracionKOExpedienteSinFinalizar",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var random = Math.floor(Math.random()*1000);\r",
									"pm.variables.set(\"random\",random);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {    \r",
									"        pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty\");\r",
									"        pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"        pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {    \r",
									"        pm.expect(responseData.mensaje).equals(\"Se ha producido un error en la copia de la valoración\");\r",
									"        pm.expect(responseData.codigo).equals(\"SOL025\");\r",
									"        pm.expect(responseData.detalles).equals(\"La valoración que se intenta copiar no se ha finalizado\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpedienteOrigen\":\"{{ExpedienteAbierto}}\",\r\n    \"codigoExpedienteCopia\":\"{{ExpedienteAbierto}}{{random}}\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}solicitante/copiarValoracion"
					},
					"response": []
				},
				{
					"name": "copiarValoracionKOExpedienteCopiaNombreExistente",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {    \r",
									"        pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty\");\r",
									"        pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"        pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {    \r",
									"        pm.expect(responseData.mensaje).equals(\"Se ha producido un error en la copia de la valoración\");\r",
									"        pm.expect(responseData.codigo).equals(\"SOL023\");\r",
									"        pm.expect(responseData.detalles).equals(\"Ya existe otro expediente con el mismo código guardado previamente al que desea copiar.\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpedienteOrigen\":\"{{ExpedienteAbierto}}\",\r\n    \"codigoExpedienteCopia\":\"{{ExpedienteAbierto}}{{ramdom}}\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}solicitante/copiarValoracion"
					},
					"response": []
				},
				{
					"name": "copiarValoracionKOcodigoExpedienteOrigenInexistente",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () { \r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {    \r",
									"        pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty\");\r",
									"        pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"        pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {   \r",
									"        pm.expect(responseData.mensaje).equals(\"Se han producido errores en la copia de la valoración\");\r",
									"        pm.expect(responseData.codigo).equals(\"SOL019\");\r",
									"        pm.expect(responseData.detalles).equals(\"El parámetro 'codigoExpedienteOrigen' es obligatorio.\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpedienteCopia\":\"{{expedienteFinalizado}}{{ramdom}}\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}solicitante/copiarValoracion"
					},
					"response": []
				},
				{
					"name": "copiarValoracionKOcodigoExpedienteOrigenVacio",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () { \r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {    \r",
									"        pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty\");\r",
									"        pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"        pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {    \r",
									"        pm.expect(responseData.mensaje).equals(\"Se han producido errores en la copia de la valoración\");\r",
									"        pm.expect(responseData.codigo).equals(\"SOL019\");\r",
									"        pm.expect(responseData.detalles).equals(\"El parámetro 'codigoExpedienteOrigen' es obligatorio.\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpedienteOrigen\":\"\",\r\n    \"codigoExpedienteCopia\":\"{{expedienteFinalizado}}{{ramdom}}\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}solicitante/copiarValoracion"
					},
					"response": []
				},
				{
					"name": "copiarValoracionKOcodigoExpedienteOrigenMayor255",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {    \r",
									"        pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty\");\r",
									"        pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"        pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {   \r",
									"        pm.expect(responseData.mensaje).equals(\"Se han producido errores en la copia de la valoración\");\r",
									"        pm.expect(responseData.codigo).equals(\"SOL020\");\r",
									"        pm.expect(responseData.detalles).equals(\"El parámetro 'codigoExpedienteOrigen' debe tener como máximo 255 caracteres.\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpedienteOrigen\":\"{{mayor255}}\",\r\n    \"codigoExpedienteCopia\":\"{{expedienteFinalizado}}{{ramdom}}\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}solicitante/copiarValoracion"
					},
					"response": []
				},
				{
					"name": "copiarValoracionKOcodigoExpedienteOrigenErroneo",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {    \r",
									"        pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty\");\r",
									"        pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"        pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {\r",
									"        pm.expect(responseData.mensaje).equals(\"Se ha producido un error en la copia de la valoración\");\r",
									"        pm.expect(responseData.codigo).equals(\"SOL011\");\r",
									"        pm.expect(responseData.detalles).equals(\"No existe ningún expediente con el código proporcionado.\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpedienteOrigen\":\"{{valorAleatorio}}\",\r\n    \"codigoExpedienteCopia\":\"{{expedienteFinalizado}}{{ramdom}}\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}solicitante/copiarValoracion"
					},
					"response": []
				},
				{
					"name": "copiarValoracionKOcodigoExpedienteCopiaInexistente",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {    \r",
									"        pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty\");\r",
									"        pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"        pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {   \r",
									"        pm.expect(responseData.mensaje).equals(\"Se han producido errores en la copia de la valoración\");\r",
									"        pm.expect(responseData.codigo).equals(\"SOL021\");\r",
									"        pm.expect(responseData.detalles).equals(\"El parámetro 'codigoExpedienteCopia' es obligatorio.\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpedienteOrigen\":\"{{expedienteFinalizado}}\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}solicitante/copiarValoracion"
					},
					"response": []
				},
				{
					"name": "copiarValoracionKOcodigoExpedienteCopiaVacio",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {    \r",
									"        pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty\");\r",
									"        pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"        pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {\r",
									"        pm.expect(responseData.mensaje).equals(\"Se han producido errores en la copia de la valoración\");\r",
									"        pm.expect(responseData.codigo).equals(\"SOL021\");\r",
									"        pm.expect(responseData.detalles).equals(\"El parámetro 'codigoExpedienteCopia' es obligatorio.\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpedienteOrigen\":\"{{expedienteFinalizado}}\",\r\n    \"codigoExpedienteCopia\":\"\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}solicitante/copiarValoracion"
					},
					"response": []
				},
				{
					"name": "copiarValoracionKOcodigoExpedienteCopiaMayor255",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {    \r",
									"        pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty\");\r",
									"        pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"        pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {    \r",
									"        pm.expect(responseData.mensaje).equals(\"Se han producido errores en la copia de la valoración\");\r",
									"        pm.expect(responseData.codigo).equals(\"SOL022\");\r",
									"        pm.expect(responseData.detalles).equals(\"El parámetro 'codigoExpedienteCopia' debe tener como máximo 255 caracteres.\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpedienteOrigen\":\"{{expedienteFinalizado}}\",\r\n    \"codigoExpedienteCopia\":\"{{mayor255}}\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}solicitante/copiarValoracion"
					},
					"response": []
				},
				{
					"name": "copiarValoracionKOcodigoEntidadInexistente",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {    \r",
									"        pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty\");\r",
									"        pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"        pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {    \r",
									"        pm.expect(responseData.mensaje).equals(\"Se han producido errores en la copia de la valoración\");\r",
									"        pm.expect(responseData.codigo).equals(\"SOL003\");\r",
									"        pm.expect(responseData.detalles).equals(\"El parámetro 'codigoEntidad' es obligatorio\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpedienteOrigen\":\"{{expedienteFinalizado}}\",\r\n    \"codigoExpedienteCopia\":\"{{expedienteFinalizado}}{{random}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}solicitante/copiarValoracion"
					},
					"response": []
				},
				{
					"name": "copiarValoracionKOcodigoEntidadVacio",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {    \r",
									"        pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty\");\r",
									"        pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"        pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {\r",
									"        pm.expect(responseData.mensaje).equals(\"Se han producido errores en la copia de la valoración\");\r",
									"        pm.expect(responseData.codigo).equals(\"SOL003\");\r",
									"        pm.expect(responseData.detalles).equals(\"El parámetro 'codigoEntidad' es obligatorio\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpedienteOrigen\":\"{{expedienteFinalizado}}\",\r\n    \"codigoExpedienteCopia\":\"{{expedienteFinalizado}}{{random}}\",\r\n    \"codigoEntidad\":\"\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}solicitante/copiarValoracion"
					},
					"response": []
				},
				{
					"name": "copiarValoracionKOcodigoEntidadErroneo",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {    \r",
									"        pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty\");\r",
									"        pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"        pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {    \r",
									"        pm.expect(responseData.mensaje).equals(\"Se ha producido un error en la copia de la valoración\");\r",
									"        pm.expect(responseData.codigo).equals(\"SOL010\");\r",
									"        pm.expect(responseData.detalles).equals(\"No existe ninguna entidad gestora con el código proporcionado.\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpedienteOrigen\":\"{{expedienteFinalizado}}\",\r\n    \"codigoExpedienteCopia\":\"{{expedienteFinalizado}}{{random}}\",\r\n    \"codigoEntidad\":\"{{valorAleatorio}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}solicitante/copiarValoracion"
					},
					"response": []
				},
				{
					"name": "copiarValoracionKOcodigoEntidadMayor50",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {    \r",
									"        pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty\");\r",
									"        pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"        pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {\r",
									"        pm.expect(responseData.mensaje).equals(\"Se han producido errores en la copia de la valoración\");\r",
									"        pm.expect(responseData.codigo).equals(\"SOL004\");\r",
									"        pm.expect(responseData.detalles).equals(\"El parámetro 'codigoEntidad' debe tener como máximo 50 caracteres\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpedienteOrigen\":\"{{expedienteFinalizado}}\",\r\n    \"codigoExpedienteCopia\":\"{{expedienteFinalizado}}{{random}}\",\r\n    \"codigoEntidad\":\"{{mayor255}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}solicitante/copiarValoracion"
					},
					"response": []
				}
			]
		},
		{
			"name": "actualizarSolicitante",
			"item": [
				{
					"name": "actualizarSolicitanteOK",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									" });\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () { \r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('codigoExpediente');\r",
									"    pm.expect(responseData).to.have.property('fechaNacimiento');\r",
									"    pm.expect(responseData).to.have.property('codigoEntidad');\r",
									"});\r",
									"\r",
									"pm.test(\"CodigoExpediente, fechaNacimiento and codigoEntidad are a non-empty strings\", function () {     \r",
									"    pm.expect(responseData.codigoExpediente).to.be.exist.to.be.a('string').and.to.have.lengthOf.at.least(1, \"CodigoExpediente should not be empty string\");;\r",
									"    pm.expect(responseData.fechaNacimiento).to.be.exist.to.be.a('string').and.to.have.lengthOf.at.least(1, \"FechaNacimiento should not be empty string\");;\r",
									"    pm.expect(responseData.codigoEntidad).to.be.exist.to.be.a('string').and.to.have.lengthOf.at.least(1, \"CodigoEntidad should not be empty string\");;\r",
									"});\r",
									"\r",
									"pm.test(\"CodigoExpediente, fechaNacimiento and codigoEntidad are correctly\", function () { \r",
									"    pm.expect(responseData.codigoExpediente).equals(pm.variables.get(\"solicitante\"));\r",
									"    pm.expect(responseData.fechaNacimiento).equals(pm.variables.get(\"fechaSolicitante\"));\r",
									"    pm.expect(responseData.codigoEntidad).equals(pm.variables.get(\"codigoEntidadAsturias\"));\r",
									"});\r",
									"\r",
									"pm.sendRequest({\r",
									"    url:pm.variables.get(\"raiz\")+\"solicitante/actualizarSolicitante\",\r",
									"    method:\"POST\",\r",
									"    header: \"Content-Type: application/json\",\r",
									"    body:{\r",
									"        mode: 'raw',\r",
									"        raw: JSON.stringify({\r",
									"            \"codigoExpediente\":pm.variables.get(\"solicitante\"),\r",
									"            \"codigoEntidad\":pm.variables.get(\"codigoEntidadAsturias\"),\r",
									"            \"nuevoCodigoEntidad\":pm.variables.get(\"codigoEntidadImserso\"),\r",
									"            \"fechaNacimiento\":pm.variables.get(\"fechaSolicitante\")\r",
									"            })\r",
									"    }\r",
									"    }, function (err, response) {\r",
									"        pm.test(\"Response update\", function () {\r",
									"            pm.expect(response.json().codigoExpediente).to.exist.and.to.be.a('string').and.equals(pm.variables.get(\"solicitante\"));\r",
									"            pm.expect(response.json().codigoEntidad).to.exist.and.to.be.a('string').and.equals(pm.variables.get(\"codigoEntidadImserso\"));\r",
									"        });\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{solicitante}}\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\",\r\n    \"nuevoCodigoEntidad\": \"{{codigoEntidadAsturias}}\",\r\n    \"fechaNacimiento\":\"{{fechaSolicitante}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}solicitante/actualizarSolicitante"
					},
					"response": []
				},
				{
					"name": "actualizarSolicitanteOKfechaNacimientoInexistente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									" });\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () { \r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('codigoExpediente');\r",
									"    pm.expect(responseData).to.have.property('fechaNacimiento');\r",
									"    pm.expect(responseData).to.have.property('codigoEntidad');\r",
									"});\r",
									"\r",
									"pm.test(\"CodigoExpediente, fechaNacimiento and codigoEntidad are a non-empty strings\", function () {     \r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData.codigoExpediente).to.be.a('string').and.to.have.lengthOf.at.least(1, \"CodigoExpediente should not be empty string\");;\r",
									"    pm.expect(responseData.fechaNacimiento).to.be.a('string').and.to.have.lengthOf.at.least(1, \"FechaNacimiento should not be empty string\");;\r",
									"    pm.expect(responseData.codigoEntidad).to.be.a('string').and.to.have.lengthOf.at.least(1, \"CodigoEntidad should not be empty string\");;\r",
									"});\r",
									"\r",
									"pm.test(\"CodigoExpediente, fechaNacimiento and codigoEntidad are correctly\", function () { \r",
									"    pm.expect(responseData.codigoExpediente).equals(pm.variables.get(\"solicitante\"));\r",
									"    pm.expect(responseData.fechaNacimiento).equals(pm.variables.get(\"fechaSolicitante\"));\r",
									"    pm.expect(responseData.codigoEntidad).equals(pm.variables.get(\"codigoEntidadAsturias\"));\r",
									"});\r",
									"\r",
									"pm.sendRequest({\r",
									"    url:pm.variables.get(\"raiz\")+\"solicitante/actualizarSolicitante\",\r",
									"    method:\"POST\",\r",
									"    header: \"Content-Type: application/json\",\r",
									"    body:{\r",
									"        mode: 'raw',\r",
									"        raw: JSON.stringify({\r",
									"            \"codigoExpediente\":pm.variables.get(\"solicitante\"),\r",
									"            \"codigoEntidad\":pm.variables.get(\"codigoEntidadAsturias\"),\r",
									"            \"nuevoCodigoEntidad\":pm.variables.get(\"codigoEntidadImserso\"),\r",
									"            \"fechaNacimiento\":pm.variables.get(\"fechaSolicitante\")\r",
									"            })\r",
									"    }\r",
									"    }, function (err, response) {\r",
									"        pm.test(\"Response update\", function () {\r",
									"            pm.expect(response.json().codigoExpediente).to.exist.and.to.be.a('string').and.equals(pm.variables.get(\"solicitante\"));\r",
									"            pm.expect(response.json().codigoEntidad).to.exist.and.to.be.a('string').and.equals(pm.variables.get(\"codigoEntidadImserso\"));\r",
									"        });\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{solicitante}}\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\",\r\n    \"nuevoCodigoEntidad\": \"{{codigoEntidadAsturias}}\",\r\n    \"fechaNacimiento\":\"{{fechaSolicitante}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}solicitante/actualizarSolicitante"
					},
					"response": []
				},
				{
					"name": "actualizarSolicitanteKOcodigoExpedienteInexistente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									" });\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () { \r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {     \r",
									"    pm.expect(responseData.mensaje).to.be.exist.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty string\");;\r",
									"    pm.expect(responseData.codigo).to.be.exist.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty string\");;\r",
									"    pm.expect(responseData.detalles).to.be.exist.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty string\");;\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () { \r",
									"    pm.expect(responseData.mensaje).equals(\"Se han producido errores en la actualización del solicitante\");\r",
									"    pm.expect(responseData.codigo).equals(\"SOL001\");\r",
									"    pm.expect(responseData.detalles).equals(\"El parámetro 'codigoExpediente' es obligatorio\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\",\r\n    \"nuevoCodigoEntidad\": \"{{codigoEntidadAsturias}}\",\r\n    \"fechaNacimiento\":\"{{fechaSolicitante}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}solicitante/actualizarSolicitante"
					},
					"response": []
				},
				{
					"name": "actualizarSolicitanteKOcodigoExpedienteVacio",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									" });\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () { \r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {     \r",
									"    pm.expect(responseData.mensaje).to.be.exist.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty string\");;\r",
									"    pm.expect(responseData.codigo).to.be.exist.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty string\");;\r",
									"    pm.expect(responseData.detalles).to.be.exist.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty string\");;\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () { \r",
									"    pm.expect(responseData.mensaje).equals(\"Se han producido errores en la actualización del solicitante\");\r",
									"    pm.expect(responseData.codigo).equals(\"SOL001\");\r",
									"    pm.expect(responseData.detalles).equals(\"El parámetro 'codigoExpediente' es obligatorio\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\",\r\n    \"nuevoCodigoEntidad\": \"{{codigoEntidadAsturias}}\",\r\n    \"fechaNacimiento\":\"{{fechaSolicitante}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}solicitante/actualizarSolicitante"
					},
					"response": []
				},
				{
					"name": "actualizarSolicitanteKOcodigoExpedienteMAyor255",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									" });\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () { \r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {     \r",
									"    pm.expect(responseData.mensaje).to.be.exist.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty string\");;\r",
									"    pm.expect(responseData.codigo).to.be.exist.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty string\");;\r",
									"    pm.expect(responseData.detalles).to.be.exist.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty string\");;\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () { \r",
									"    pm.expect(responseData.mensaje).equals(\"Se han producido errores en la actualización del solicitante\");\r",
									"    pm.expect(responseData.codigo).equals(\"SOL002\");\r",
									"    pm.expect(responseData.detalles).equals(\"El parámetro 'codigoExpediente' debe tener como máximo 255 caracteres\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{mayor255}}\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\",\r\n    \"nuevoCodigoEntidad\": \"{{codigoEntidadAsturias}}\",\r\n    \"fechaNacimiento\":\"{{fechaSolicitante}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}solicitante/actualizarSolicitante"
					},
					"response": []
				},
				{
					"name": "actualizarSolicitanteKOcodigoEntidadInexistente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									" });\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () { \r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {     \r",
									"    pm.expect(responseData.mensaje).to.be.exist.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty string\");;\r",
									"    pm.expect(responseData.codigo).to.be.exist.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty string\");;\r",
									"    pm.expect(responseData.detalles).to.be.exist.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty string\");;\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () { \r",
									"    pm.expect(responseData.mensaje).equals(\"Se han producido errores en la actualización del solicitante\");\r",
									"    pm.expect(responseData.codigo).equals(\"SOL003\");\r",
									"    pm.expect(responseData.detalles).equals(\"El parámetro 'codigoEntidad' es obligatorio\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{solicitante}}\",\r\n    \"nuevoCodigoEntidad\": \"{{codigoEntidadAsturias}}\",\r\n    \"fechaNacimiento\":\"{{fechaSolicitante}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}solicitante/actualizarSolicitante"
					},
					"response": []
				},
				{
					"name": "actualizarSolicitanteKOcodigoEntidadVacio",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									" });\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () { \r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {     \r",
									"    pm.expect(responseData.mensaje).to.be.exist.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty string\");;\r",
									"    pm.expect(responseData.codigo).to.be.exist.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty string\");;\r",
									"    pm.expect(responseData.detalles).to.be.exist.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty string\");;\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () { \r",
									"    pm.expect(responseData.mensaje).equals(\"Se han producido errores en la actualización del solicitante\");\r",
									"    pm.expect(responseData.codigo).equals(\"SOL003\");\r",
									"    pm.expect(responseData.detalles).equals(\"El parámetro 'codigoEntidad' es obligatorio\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{solicitante}}\",\r\n    \"codigoEntidad\":\"\",\r\n    \"nuevoCodigoEntidad\": \"{{codigoEntidadAsturias}}\",\r\n    \"fechaNacimiento\":\"{{fechaSolicitante}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}solicitante/actualizarSolicitante"
					},
					"response": []
				},
				{
					"name": "actualizarSolicitanteKOcodigoEntidadMayo50",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									" });\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () { \r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {     \r",
									"    pm.expect(responseData.mensaje).to.be.exist.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty string\");;\r",
									"    pm.expect(responseData.codigo).to.be.exist.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty string\");;\r",
									"    pm.expect(responseData.detalles).to.be.exist.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty string\");;\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () { \r",
									"    pm.expect(responseData.mensaje).equals(\"Se han producido errores en la actualización del solicitante\");\r",
									"    pm.expect(responseData.codigo).equals(\"SOL004\");\r",
									"    pm.expect(responseData.detalles).equals(\"El parámetro 'codigoEntidad' debe tener como máximo 50 caracteres\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{solicitante}}\",\r\n    \"codigoEntidad\":\"{{mayor255}}\",\r\n    \"nuevoCodigoEntidad\": \"{{codigoEntidadAsturias}}\",\r\n    \"fechaNacimiento\":\"{{fechaSolicitante}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}solicitante/actualizarSolicitante"
					},
					"response": []
				},
				{
					"name": "actualizarSolicitanteKOnuevoCodigoEntidadInexistente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									" });\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () { \r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {     \r",
									"    pm.expect(responseData.mensaje).to.be.exist.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty string\");;\r",
									"    pm.expect(responseData.codigo).to.be.exist.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty string\");;\r",
									"    pm.expect(responseData.detalles).to.be.exist.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty string\");;\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () { \r",
									"    pm.expect(responseData.mensaje).equals(\"Se han producido errores en la actualización del solicitante\");\r",
									"    pm.expect(responseData.codigo).equals(\"SOL004\");\r",
									"    pm.expect(responseData.detalles).equals(\"El parámetro 'codigoEntidad' debe tener como máximo 50 caracteres\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{solicitante}}\",\r\n    \"codigoEntidad\":\"{{mayor255}}\",\r\n    \"nuevoCodigoEntidad\": \"{{codigoEntidadAsturias}}\",\r\n    \"fechaNacimiento\":\"{{fechaSolicitante}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}solicitante/actualizarSolicitante"
					},
					"response": []
				},
				{
					"name": "actualizarSolicitanteKOnuevoCodigoEntidadVacio",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									" });\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () { \r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {     \r",
									"    pm.expect(responseData.mensaje).to.be.exist.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty string\");;\r",
									"    pm.expect(responseData.codigo).to.be.exist.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty string\");;\r",
									"    pm.expect(responseData.detalles).to.be.exist.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty string\");;\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () { \r",
									"    pm.expect(responseData.mensaje).equals(\"Se ha producido un error en la actualización del solicitante\");\r",
									"    pm.expect(responseData.codigo).equals(\"SOL016\");\r",
									"    pm.expect(responseData.detalles).equals(\"No existe ninguna entidad gestora con el código de la nueva entidad proporcionado.\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{solicitante}}\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\",\r\n    \"nuevoCodigoEntidad\": \"\",\r\n    \"fechaNacimiento\":\"{{fechaSolicitante}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}solicitante/actualizarSolicitante"
					},
					"response": []
				},
				{
					"name": "actualizarSolicitanteKOnuevoCodigoEntidadMayor50",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									" });\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () { \r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {     \r",
									"    pm.expect(responseData.mensaje).to.be.exist.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty string\");;\r",
									"    pm.expect(responseData.codigo).to.be.exist.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty string\");;\r",
									"    pm.expect(responseData.detalles).to.be.exist.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty string\");;\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () { \r",
									"    pm.expect(responseData.mensaje).equals(\"Se han producido errores en la actualización del solicitante\");\r",
									"    pm.expect(responseData.codigo).equals(\"SOL004\");\r",
									"    pm.expect(responseData.detalles).equals(\"El parámetro 'codigoEntidad' debe tener como máximo 50 caracteres\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{solicitante}}\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\",\r\n    \"nuevoCodigoEntidad\": \"{{mayor255}}\",\r\n    \"fechaNacimiento\":\"{{fechaSolicitante}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}solicitante/actualizarSolicitante"
					},
					"response": []
				},
				{
					"name": "actualizarSolicitanteKOnuevoCodigoEntidadBaja",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									" });\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () { \r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {     \r",
									"    pm.expect(responseData.mensaje).to.be.exist.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty string\");;\r",
									"    pm.expect(responseData.codigo).to.be.exist.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty string\");;\r",
									"    pm.expect(responseData.detalles).to.be.exist.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty string\");;\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () { \r",
									"    pm.expect(responseData.mensaje).equals(\"Se ha producido un error en la actualización del solicitante\");\r",
									"    pm.expect(responseData.codigo).equals(\"SOL018\");\r",
									"    pm.expect(responseData.detalles).equals(\"La nueva entidad gestora proporcionada se encuentra dada de baja.\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{solicitante}}\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\",\r\n    \"nuevoCodigoEntidad\": \"{{codigoEntidadBaja}}\",\r\n    \"fechaNacimiento\":\"{{fechaSolicitante}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}solicitante/actualizarSolicitante"
					},
					"response": []
				},
				{
					"name": "actualizarSolicitanteKOfechaNacimientoVacia",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									" });\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () { \r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {     \r",
									"    pm.expect(responseData.mensaje).to.be.exist.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty string\");;\r",
									"    pm.expect(responseData.codigo).to.be.exist.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty string\");;\r",
									"    pm.expect(responseData.detalles).to.be.exist.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty string\");;\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () { \r",
									"    pm.expect(responseData.mensaje).equals(\"Se ha producido un error en la actualización del solicitante\");\r",
									"    pm.expect(responseData.codigo).equals(\"SOL009\");\r",
									"    pm.expect(responseData.detalles).equals(\"Formato de fecha incorrecto (formato dd/MM/yyyy).\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{solicitante}}\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\",\r\n    \"nuevoCodigoEntidad\": \"{{codigoEntidadAsturias}}\",\r\n    \"fechaNacimiento\":\"\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}solicitante/actualizarSolicitante"
					},
					"response": []
				},
				{
					"name": "actualizarSolicitanteKOfechaNacimientoMayor10",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									" });\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () { \r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {     \r",
									"    pm.expect(responseData.mensaje).to.be.exist.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty string\");;\r",
									"    pm.expect(responseData.codigo).to.be.exist.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty string\");;\r",
									"    pm.expect(responseData.detalles).to.be.exist.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty string\");;\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () { \r",
									"    pm.expect(responseData.mensaje).equals(\"Se han producido errores en la actualización del solicitante\");\r",
									"    pm.expect(responseData.codigo).equals(\"SOL006\");\r",
									"    pm.expect(responseData.detalles).equals(\"El parámetro 'fechaNacimiento' debe tener como máximo 10 caracteres\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{solicitante}}\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\",\r\n    \"nuevoCodigoEntidad\": \"{{codigoEntidadAsturias}}\",\r\n    \"fechaNacimiento\": \"{{mayor255}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}solicitante/actualizarSolicitante"
					},
					"response": []
				},
				{
					"name": "actualizarSolicitanteKOfechaNacimientoErroneo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									" });\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () { \r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {     \r",
									"    pm.expect(responseData.mensaje).to.be.exist.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty string\");;\r",
									"    pm.expect(responseData.codigo).to.be.exist.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty string\");;\r",
									"    pm.expect(responseData.detalles).to.be.exist.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty string\");;\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () { \r",
									"    pm.expect(responseData.mensaje).equals(\"Se ha producido un error en la actualización del solicitante\");\r",
									"    pm.expect(responseData.codigo).equals(\"SOL009\");\r",
									"    pm.expect(responseData.detalles).equals(\"Formato de fecha incorrecto (formato dd/MM/yyyy).\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{solicitante}}\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\",\r\n    \"nuevoCodigoEntidad\": \"{{codigoEntidadAsturias}}\",\r\n    \"fechaNacimiento\": \"{{valorAleatorio}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}solicitante/actualizarSolicitante"
					},
					"response": []
				},
				{
					"name": "actualizarSolicitanteKOfechaNacimientoPosteriorFechaActual",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									" });\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () { \r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {     \r",
									"    pm.expect(responseData.mensaje).to.be.exist.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty string\");;\r",
									"    pm.expect(responseData.codigo).to.be.exist.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty string\");;\r",
									"    pm.expect(responseData.detalles).to.be.exist.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty string\");;\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () { \r",
									"    pm.expect(responseData.mensaje).equals(\"Se ha producido un error en la actualización del solicitante\");\r",
									"    pm.expect(responseData.codigo).equals(\"SOL008\");\r",
									"    pm.expect(responseData.detalles).equals(\"Fecha de nacimiento posterior a la fecha actual.\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{solicitante}}\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\",\r\n    \"nuevoCodigoEntidad\": \"{{codigoEntidadAsturias}}\",\r\n    \"fechaNacimiento\": \"{{currentdate}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}solicitante/actualizarSolicitante"
					},
					"response": []
				},
				{
					"name": "actualizarSolicitanteKOexpedienteFinalizado",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									" });\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () { \r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {     \r",
									"    pm.expect(responseData.mensaje).to.be.exist.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty string\");;\r",
									"    pm.expect(responseData.codigo).to.be.exist.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty string\");;\r",
									"    pm.expect(responseData.detalles).to.be.exist.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty string\");;\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () { \r",
									"    pm.expect(responseData.mensaje).equals(\"Se ha producido un error en la actualización del solicitante\");\r",
									"    pm.expect(responseData.codigo).equals(\"SOL013\");\r",
									"    pm.expect(responseData.detalles).equals(\"El baremo BLA o el BRP asociados al beneficiario han finalizado, por lo tanto no se puede actualizar la fecha de nacimiento.\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{expedienteFinalizado}}\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\",\r\n    \"nuevoCodigoEntidad\": \"{{codigoEntidadAsturias}}\",\r\n    \"fechaNacimiento\": \"{{fechaSolicitante}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}solicitante/actualizarSolicitante"
					},
					"response": []
				}
			]
		},
		{
			"name": "finalizarValoracion",
			"item": [
				{
					"name": "finalizarValoracionOK",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () { \r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('codigoExpediente');\r",
									"    pm.expect(responseData).to.have.property('puntuacionFinal');\r",
									"    pm.expect(responseData).to.have.property('codigoEntidad');\r",
									"});\r",
									"\r",
									"pm.test(\"CodigoExpediente, codigoEntidad and puntuacionFinal are a non-empty strings\", function () {    \r",
									"    pm.expect(responseData.codigoExpediente).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"CodigoExpediente should not be empty\");\r",
									"    pm.expect(responseData.puntuacionFinal).to.exist;\r",
									"    pm.expect(responseData.codigoEntidad).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"CodigoEntidad should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"CodigoExpediente and codigoEntidad are correctly\", function () {\r",
									"    pm.expect(responseData.codigoExpediente).equals(pm.variables.get(\"ExpedienteAbierto\"));\r",
									"    pm.expect(responseData.codigoEntidad).equals(pm.variables.get(\"codigoEntidadImserso\"));\r",
									"});\r",
									"\r",
									"pm.sendRequest({\r",
									"    url:pm.variables.get(\"raiz\")+\"evaluacion/reabrirValoracion\",\r",
									"    method:\"POST\",\r",
									"    header: \"Content-Type: application/json\",\r",
									"    body:{\r",
									"        mode: 'raw',\r",
									"        raw: JSON.stringify({\r",
									"            \"codigoExpediente\": pm.variables.get(\"ExpedienteAbierto\"),\r",
									"            \"codigoEntidad\": pm.variables.get(\"codigoEntidadImserso\")\r",
									"        })\r",
									"    }\r",
									"    }, function (err, response) {\r",
									"        pm.test(\"Response open\", function () {\r",
									"            pm.expect(response.json().codigoExpediente).to.exist.and.to.be.a('string').and.equals(pm.variables.get(\"ExpedienteAbierto\"));\r",
									"            pm.expect(response.json().codigoEntidad).to.exist.and.to.be.a('string').and.equals(pm.variables.get(\"codigoEntidadImserso\"));          \r",
									"        });\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{ExpedienteAbierto}}\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\",\r\n    \"isRevisable\":\"false\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/finalizarValoracion"
					},
					"response": []
				},
				{
					"name": "finalizarValoracionKOcodigoExpedienteInexistente",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {\r",
									"    pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty\");\r",
									"    pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"    pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {\r",
									"    pm.expect(responseData.mensaje).equals(\"Se han producido errores en la obtención de datos del solicitante\");\r",
									"    pm.expect(responseData.codigo).equals(\"SOL001\");\r",
									"    pm.expect(responseData.detalles).equals(\"El parámetro 'codigoExpediente' es obligatorio\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\",\r\n    \"isRevisable\":\"false\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/finalizarValoracion"
					},
					"response": []
				},
				{
					"name": "finalizarValoracionKOcodigoExpedienteVacio",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {\r",
									"    pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty\");\r",
									"    pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"    pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {\r",
									"    pm.expect(responseData.mensaje).equals(\"Se han producido errores en la obtención de datos del solicitante\");\r",
									"    pm.expect(responseData.codigo).equals(\"SOL001\");\r",
									"    pm.expect(responseData.detalles).equals(\"El parámetro 'codigoExpediente' es obligatorio\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\",\r\n    \"isRevisable\":\"false\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/finalizarValoracion"
					},
					"response": []
				},
				{
					"name": "finalizarValoracionKOcodigoExpedienteMayor255",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {\r",
									"    pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty\");\r",
									"    pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"    pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {\r",
									"    pm.expect(responseData.mensaje).equals(\"Se han producido errores en la obtención de datos del solicitante\");\r",
									"    pm.expect(responseData.codigo).equals(\"SOL002\");\r",
									"    pm.expect(responseData.detalles).equals(\"El parámetro 'codigoExpediente' debe tener como máximo 255 caracteres\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{mayor255}}\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\",\r\n    \"isRevisable\":\"false\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/finalizarValoracion"
					},
					"response": []
				},
				{
					"name": "finalizarValoracionKOcodigoExpedienteErroneo",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {\r",
									"    pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty\");\r",
									"    pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"    pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {\r",
									"    pm.expect(responseData.mensaje).equals(\"Se han producido errores en la obtención de datos del solicitante\");\r",
									"    pm.expect(responseData.codigo).equals(\"SOL002\");\r",
									"    pm.expect(responseData.detalles).equals(\"El parámetro 'codigoExpediente' debe tener como máximo 255 caracteres\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{mayor255}}\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\",\r\n    \"isRevisable\":\"false\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/finalizarValoracion"
					},
					"response": []
				},
				{
					"name": "finalizarValoracionKOvaloracionSinBLA",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {\r",
									"    pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty\");\r",
									"    pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"    pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {\r",
									"    pm.expect(responseData.mensaje).equals(\"Se ha producido un error en la finalización de la evaluación\");\r",
									"    pm.expect(responseData.codigo).equals(\"FINE006\");\r",
									"    pm.expect(responseData.detalles).equals(\"Se debe incluir algún baremo para el guardado del grado final de discapacidad de la persona.\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{solicitante}}\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\",\r\n    \"isRevisable\":\"false\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/finalizarValoracion"
					},
					"response": []
				},
				{
					"name": "finalizarValoracionKOvaloracionFinalizada",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {\r",
									"    pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty\");\r",
									"    pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"    pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {\r",
									"    pm.expect(responseData.mensaje).equals(\"Se ha producido un error en la finalización de la evaluación\");\r",
									"    pm.expect(responseData.codigo).equals(\"FINE006\");\r",
									"    pm.expect(responseData.detalles).equals(\"Se debe incluir algún baremo para el guardado del grado final de discapacidad de la persona.\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{solicitante}}\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\",\r\n    \"isRevisable\":\"false\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/finalizarValoracion"
					},
					"response": []
				},
				{
					"name": "finalizarValoracionKOcodigoEntidadInexistente",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {\r",
									"    pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty\");\r",
									"    pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"    pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {\r",
									"    pm.expect(responseData.mensaje).equals(\"Se han producido errores en la obtención de datos del solicitante\");\r",
									"    pm.expect(responseData.codigo).equals(\"SOL003\");\r",
									"    pm.expect(responseData.detalles).equals(\"El parámetro 'codigoEntidad' es obligatorio\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{ExpedienteAbierto}}\",\r\n    \"codigoEntidad\":\"\",\r\n    \"isRevisable\":\"false\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/finalizarValoracion"
					},
					"response": []
				},
				{
					"name": "finalizarValoracionKOcodigoEntidadVacio",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {\r",
									"    pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty\");\r",
									"    pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"    pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {\r",
									"    pm.expect(responseData.mensaje).equals(\"Se han producido errores en la obtención de datos del solicitante\");\r",
									"    pm.expect(responseData.codigo).equals(\"SOL003\");\r",
									"    pm.expect(responseData.detalles).equals(\"El parámetro 'codigoEntidad' es obligatorio\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{ExpedienteAbierto}}\",\r\n    \"codigoEntidad\":\"\",\r\n    \"isRevisable\":\"false\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/finalizarValoracion"
					},
					"response": []
				},
				{
					"name": "finalizarValoracionKOcodigoEntidadMayor50",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {\r",
									"    pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty\");\r",
									"    pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"    pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {\r",
									"    pm.expect(responseData.mensaje).equals(\"Se han producido errores en la obtención de datos del solicitante\");\r",
									"    pm.expect(responseData.codigo).equals(\"SOL004\");\r",
									"    pm.expect(responseData.detalles).equals(\"El parámetro 'codigoEntidad' debe tener como máximo 50 caracteres\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{ExpedienteAbierto}}\",\r\n    \"codigoEntidad\":\"{{mayor255}}\",\r\n    \"isRevisable\":\"false\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/finalizarValoracion"
					},
					"response": []
				},
				{
					"name": "finalizarValoracionKOcodigoEntidadErroeno",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {\r",
									"    pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty\");\r",
									"    pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"    pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {\r",
									"    pm.expect(responseData.mensaje).equals(\"Se ha producido un error en la finalización de la evaluación\");\r",
									"    pm.expect(responseData.codigo).equals(\"FINE003\");\r",
									"    pm.expect(responseData.detalles).equals(\"No existe ninguna entidad gestora con el código proporcionado.\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{ExpedienteAbierto}}\",\r\n    \"codigoEntidad\":\"{{valorAleatorio}}\",\r\n    \"isRevisable\":\"false\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/finalizarValoracion"
					},
					"response": []
				},
				{
					"name": "finalizarValoracionKOisRevisableInexistente",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {\r",
									"    pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty\");\r",
									"    pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"    pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {\r",
									"    pm.expect(responseData.mensaje).equals(\"Se han producido errores en la obtención de datos del solicitante\");\r",
									"    pm.expect(responseData.codigo).equals(\"EVAL004\");\r",
									"    pm.expect(responseData.detalles).equals(\"El parámetro 'isRevisable' es obligatorio\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{ExpedienteAbierto}}\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/finalizarValoracion"
					},
					"response": []
				},
				{
					"name": "finalizarValoracionKOisRevisableVacio",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {\r",
									"    pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty\");\r",
									"    pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"    pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {\r",
									"    pm.expect(responseData.mensaje).equals(\"Se han producido errores en la obtención de datos del solicitante\");\r",
									"    pm.expect(responseData.codigo).equals(\"EVAL004\");\r",
									"    pm.expect(responseData.detalles).equals(\"El parámetro 'isRevisable' es obligatorio\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{ExpedienteAbierto}}\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\",\r\n    \"isRevisable\":\"\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/finalizarValoracion"
					},
					"response": []
				},
				{
					"name": "finalizarValoracionKOisRevisableTrueFechaRevisionNull",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {\r",
									"    pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty\");\r",
									"    pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"    pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {\r",
									"    pm.expect(responseData.mensaje).equals(\"Se ha producido un error en la finalización de la evaluación\");\r",
									"    pm.expect(responseData.codigo).equals(\"FINE011\");\r",
									"    pm.expect(responseData.detalles).equals(\"Si se marca como revisable la valoración se debe proporcionar una fecha de revisión.\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{ExpedienteAbierto}}\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\",\r\n    \"isRevisable\":\"true\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/finalizarValoracion"
					},
					"response": []
				},
				{
					"name": "finalizarValoracionKOisRevisableTrueFechaRevisionAnteriorFechaValoracion",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var moment = require(\"moment\");\r",
									"\r",
									"pm.environment.set(\"postdate\",moment().subtract(\"day\",1000).format((\"DD/MM/YYYY\")));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {\r",
									"    pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty\");\r",
									"    pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"    pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {\r",
									"    pm.expect(responseData.mensaje).equals(\"Se ha producido un error en la finalización de la evaluación\");\r",
									"    pm.expect(responseData.codigo).equals(\"FINE010\");\r",
									"    pm.expect(responseData.detalles).equals(\"La fecha de revisión debe ser posterior a la fecha de valoración\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{ExpedienteAbierto}}\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\",\r\n    \"isRevisable\":\"true\",\r\n    \"fechaRevision\":\"{{postdate}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/finalizarValoracion"
					},
					"response": []
				},
				{
					"name": "finalizarValoracionKOisRevisableTrueFechaRevisionMalFormnato",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var moment = require(\"moment\");\r",
									"\r",
									"pm.globals.set(\"postdate\",moment().subtract(\"day\",10).format((\"DD/MM/YYYY\")));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {\r",
									"    pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty\");\r",
									"    pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"    pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {\r",
									"    pm.expect(responseData.mensaje).equals(\"Se ha producido un error en la finalización de la evaluación\");\r",
									"    pm.expect(responseData.codigo).equals(\"FINE009\");\r",
									"    pm.expect(responseData.detalles).equals(\"Formato de fecha incorrecto (formato dd/MM/yyyy).\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{ExpedienteAbierto}}\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\",\r\n    \"isRevisable\":\"true\",\r\n    \"fechaRevision\":\"{{valorAleatorio}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/finalizarValoracion"
					},
					"response": []
				},
				{
					"name": "finalizarValoracionKOisRevisableTrueFechaRevisionMayor10",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var moment = require(\"moment\");\r",
									"\r",
									"pm.globals.set(\"postdate\",moment().subtract(\"day\",10).format((\"DD/MM/YYYY\")));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {\r",
									"    pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty\");\r",
									"    pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"    pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {\r",
									"    pm.expect(responseData.mensaje).equals(\"Se han producido errores en la obtención de datos del solicitante\");\r",
									"    pm.expect(responseData.codigo).equals(\"EVAL003\");\r",
									"    pm.expect(responseData.detalles).equals(\"El parámetro 'fechaRevision' debe tener como máximo 10 caracteres\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{ExpedienteAbierto}}\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\",\r\n    \"isRevisable\":\"true\",\r\n    \"fechaRevision\":\"{{mayor255}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/finalizarValoracion"
					},
					"response": []
				}
			]
		},
		{
			"name": "reabrirValoracion",
			"item": [
				{
					"name": "reabrirValoracionOKreabrirValoracion",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('codigoExpediente');\r",
									"    pm.expect(responseData).to.have.property('fechaNacimiento');\r",
									"    pm.expect(responseData).to.have.property('codigoEntidad');\r",
									"});\r",
									"\r",
									"pm.test(\"CodigoExpediente, fechaNacimiento and codigoEntidad are a non-empty strings\", function () {    \r",
									"    pm.expect(responseData.codigoExpediente).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"CodigoExpediente should not be empty\");\r",
									"    pm.expect(responseData.fechaNacimiento).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"FechaNacimiento should not be empty\");\r",
									"    pm.expect(responseData.codigoEntidad).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"CodigoEntidad should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"CodigoExpediente, fechaNacimiento and codigoEntidad are correctly\", function () {   \r",
									"    pm.expect(responseData.codigoExpediente).equals(pm.variables.get(\"expedienteFinalizado\"));\r",
									"    pm.expect(responseData.fechaNacimiento).equals(pm.variables.get(\"fechaNAciemientoExpedienteFinalizado\"));\r",
									"    pm.expect(responseData.codigoEntidad).equals(pm.variables.get(\"codigoEntidadImserso\"));\r",
									"});\r",
									"\r",
									"pm.sendRequest({\r",
									"    url:pm.variables.get(\"raiz\")+\"evaluacion/finalizarValoracion\",\r",
									"    method:\"POST\",\r",
									"    header: \"Content-Type: application/json\",\r",
									"    body:{\r",
									"        mode: 'raw',\r",
									"        raw: JSON.stringify({\r",
									"        \"codigoExpediente\":pm.variables.get(\"expedienteFinalizado\"),\r",
									"        \"codigoEntidad\":pm.variables.get(\"codigoEntidadImserso\"),\r",
									"        \"isRevisable\":\"false\"\r",
									"        })\r",
									"    }\r",
									"    }, function (err, response) {\r",
									"        pm.test(\"Response close\", function () {\r",
									"            pm.expect(response.json().codigoExpediente).to.exist.and.to.be.a('string').and.equals(pm.variables.get(\"expedienteFinalizado\"));\r",
									"            pm.expect(response.json().codigoEntidad).to.exist.and.to.be.a('string').and.equals(pm.variables.get(\"codigoEntidadImserso\"));           \r",
									"        });\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{expedienteFinalizado}}\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/reabrirValoracion"
					},
					"response": []
				},
				{
					"name": "reabrirValoracionOKreabrirValoracion Copy",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('codigoExpediente');\r",
									"    pm.expect(responseData).to.have.property('fechaNacimiento');\r",
									"    pm.expect(responseData).to.have.property('codigoEntidad');\r",
									"});\r",
									"\r",
									"pm.test(\"CodigoExpediente, fechaNacimiento and codigoEntidad are a non-empty strings\", function () {    \r",
									"    pm.expect(responseData.codigoExpediente).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"CodigoExpediente should not be empty\");\r",
									"    pm.expect(responseData.fechaNacimiento).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"FechaNacimiento should not be empty\");\r",
									"    pm.expect(responseData.codigoEntidad).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"CodigoEntidad should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"CodigoExpediente, fechaNacimiento and codigoEntidad are correctly\", function () {   \r",
									"    pm.expect(responseData.codigoExpediente).equals(pm.variables.get(\"expedienteFinalizado\"));\r",
									"    pm.expect(responseData.fechaNacimiento).equals(pm.variables.get(\"fechaNAciemientoExpedienteFinalizado\"));\r",
									"    pm.expect(responseData.codigoEntidad).equals(pm.variables.get(\"codigoEntidadImserso\"));\r",
									"});\r",
									"\r",
									"pm.sendRequest({\r",
									"    url:pm.variables.get(\"raiz\")+\"evaluacion/finalizarValoracion\",\r",
									"    method:\"POST\",\r",
									"    header: \"Content-Type: application/json\",\r",
									"    body:{\r",
									"        mode: 'raw',\r",
									"        raw: JSON.stringify({\r",
									"        \"codigoExpediente\":pm.variables.get(\"expedienteFinalizado\"),\r",
									"        \"codigoEntidad\":pm.variables.get(\"codigoEntidadImserso\"),\r",
									"        \"isRevisable\":\"false\"\r",
									"        })\r",
									"    }\r",
									"    }, function (err, response) {\r",
									"        pm.test(\"Response close\", function () {\r",
									"            pm.expect(response.json().codigoExpediente).to.exist.and.to.be.a('string').and.equals(pm.variables.get(\"expedienteFinalizado\"));\r",
									"            pm.expect(response.json().codigoEntidad).to.exist.and.to.be.a('string').and.equals(pm.variables.get(\"codigoEntidadImserso\"));           \r",
									"        });\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{expedienteFinalizado}}\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/reabrirValoracion"
					},
					"response": []
				},
				{
					"name": "reabrirValoracionKOcodigoExpedienteInexistente",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {\r",
									"    pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty\");\r",
									"    pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"    pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {  \r",
									"    pm.expect(responseData.mensaje).equals(\"Se han producido errores en la obtención de datos del solicitante\");\r",
									"    pm.expect(responseData.codigo).equals(\"SOL001\");\r",
									"    pm.expect(responseData.detalles).equals(\"El parámetro 'codigoExpediente' es obligatorio\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/reabrirValoracion"
					},
					"response": []
				},
				{
					"name": "reabrirValoracionKOcodigoExpedienteVacio",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {    \r",
									"        pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty\");\r",
									"        pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"        pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {    \r",
									"        pm.expect(responseData.mensaje).equals(\"Se han producido errores en la obtención de datos del solicitante\");\r",
									"        pm.expect(responseData.codigo).equals(\"SOL001\");\r",
									"        pm.expect(responseData.detalles).equals(\"El parámetro 'codigoExpediente' es obligatorio\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/reabrirValoracion"
					},
					"response": []
				},
				{
					"name": "reabrirValoracionKOcodigoExpedienteMayor255",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {    \r",
									"        pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty\");\r",
									"        pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"        pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {    \r",
									"        pm.expect(responseData.mensaje).equals(\"Se han producido errores en la obtención de datos del solicitante\");\r",
									"        pm.expect(responseData.codigo).equals(\"SOL002\");\r",
									"        pm.expect(responseData.detalles).equals(\"El parámetro 'codigoExpediente' debe tener como máximo 255 caracteres\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{mayor255}}\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/reabrirValoracion"
					},
					"response": []
				},
				{
					"name": "reabrirValoracionKOcodigoExpedienteErroneo",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {    \r",
									"        pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty\");\r",
									"        pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"        pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {    \r",
									"        pm.expect(responseData.mensaje).equals(\"Se ha producido un error a la hora de reabrir la valoración\");\r",
									"        pm.expect(responseData.codigo).equals(\"SOL011\");\r",
									"        pm.expect(responseData.detalles).equals(\"No existe ningún expediente con el código proporcionado.\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{valorAleatorio}}\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/reabrirValoracion"
					},
					"response": []
				},
				{
					"name": "reabrirValoracionKOcodigoExpedienteAbierto",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {    \r",
									"        pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty\");\r",
									"        pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"        pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {   \r",
									"        pm.expect(responseData.mensaje).equals(\"Se ha producido un error a la hora de reabrir la valoración\");\r",
									"        pm.expect(responseData.codigo).equals(\"EVAL001\");\r",
									"        pm.expect(responseData.detalles).equals(\"No se ha finalizado la valoración de discapacidad del solicitante\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{ExpedienteAbierto}}\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/reabrirValoracion"
					},
					"response": []
				},
				{
					"name": "reabrirValoracionKOcodigoEntidadInexistente",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {    \r",
									"        pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty\");\r",
									"        pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"        pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {    \r",
									"        pm.expect(responseData.mensaje).equals(\"Se han producido errores en la obtención de datos del solicitante\");\r",
									"        pm.expect(responseData.codigo).equals(\"SOL003\");\r",
									"        pm.expect(responseData.detalles).equals(\"El parámetro 'codigoEntidad' es obligatorio\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{expedienteFinalizado}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/reabrirValoracion"
					},
					"response": []
				},
				{
					"name": "reabrirValoracionKOcodigoEntidadVacio",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {    \r",
									"        pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty\");\r",
									"        pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"        pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {    \r",
									"        pm.expect(responseData.mensaje).equals(\"Se han producido errores en la obtención de datos del solicitante\");\r",
									"        pm.expect(responseData.codigo).equals(\"SOL003\");\r",
									"        pm.expect(responseData.detalles).equals(\"El parámetro 'codigoEntidad' es obligatorio\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{expedienteFinalizado}}\",\r\n    \"codigoEntidad\":\"\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/reabrirValoracion"
					},
					"response": []
				},
				{
					"name": "reabrirValoracionKOcodigoEntidadMayor50",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {    \r",
									"        pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty\");\r",
									"        pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"        pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {    \r",
									"        pm.expect(responseData.mensaje).equals(\"Se han producido errores en la obtención de datos del solicitante\");\r",
									"        pm.expect(responseData.codigo).equals(\"SOL004\");\r",
									"        pm.expect(responseData.detalles).equals(\"El parámetro 'codigoEntidad' debe tener como máximo 50 caracteres\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{expedienteFinalizado}}\",\r\n    \"codigoEntidad\":\"{{mayor255}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/reabrirValoracion"
					},
					"response": []
				},
				{
					"name": "reabrirValoracionKOcodigoEntidadErroneo",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {    \r",
									"        pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty\");\r",
									"        pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"        pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {    \r",
									"        pm.expect(responseData.mensaje).equals(\"Se ha producido un error a la hora de reabrir la valoración\");\r",
									"        pm.expect(responseData.codigo).equals(\"SOL010\");\r",
									"        pm.expect(responseData.detalles).equals(\"No existe ninguna entidad gestora con el código proporcionado.\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{expedienteFinalizado}}\",\r\n    \"codigoEntidad\":\"{{valorAleatorio}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/reabrirValoracion"
					},
					"response": []
				}
			]
		},
		{
			"name": "eliminarValoracion",
			"item": [
				{
					"name": "eliminarValoracionOK",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var random = Math.floor(Math.random()*1000);\r",
									"pm.environment.set(\"random\",random);\r",
									"\r",
									"pm.environment.set(\"copiaABorrar\", pm.variables.get(\"expedienteFinalizado\") + pm.variables.get(\"random\"))\r",
									"\r",
									"pm.sendRequest({\r",
									"    url:pm.variables.get(\"raiz\")+\"solicitante/copiarValoracion\",\r",
									"    method:\"POST\",\r",
									"    header: \"Content-Type: application/json\",\r",
									"    body:{\r",
									"        mode: 'raw',\r",
									"        raw: JSON.stringify({\r",
									"            \"codigoExpedienteOrigen\": pm.variables.get(\"expedienteFinalizado\"),\r",
									"            \"codigoExpedienteCopia\": pm.variables.get(\"copiaABorrar\"),\r",
									"            \"codigoEntidad\": pm.variables.get(\"codigoEntidadImserso\")\r",
									"        })\r",
									"    }\r",
									"    }, function (err, response) {\r",
									"        pm.test(\"Response preCopia\", function () {\r",
									"            pm.expect(response.json().codigoExpediente).to.exist.and.to.be.a('string').and.equals(pm.variables.get(\"copiaABorrar\"));\r",
									"            pm.expect(response.json().codigoEntidad).to.exist.and.to.be.a('string').and.equals(pm.variables.get(\"codigoEntidadImserso\"));\r",
									"        });\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"});\r",
									"\r",
									"pm.test(\"Response matches the expected schema for success or error\", function () {    \r",
									"        pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response matche is correctly\", function () {\r",
									"        pm.expect(responseData.mensaje).equals(\"Se ha borrado la valoración\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{copiaABorrar}}\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}solicitante/eliminarValoracion"
					},
					"response": []
				},
				{
					"name": "eliminarValoracionKOcodigoExpedienteInexistente",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {    \r",
									"        pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty\");\r",
									"        pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"        pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {   \r",
									"        pm.expect(responseData.mensaje).equals(\"Se han producido errores en la obtención de datos del solicitante\");\r",
									"        pm.expect(responseData.codigo).equals(\"SOL001\");\r",
									"        pm.expect(responseData.detalles).equals(\"El parámetro 'codigoExpediente' es obligatorio\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}solicitante/eliminarValoracion"
					},
					"response": []
				},
				{
					"name": "eliminarValoracionKOcodigoExpedienteVacio",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {    \r",
									"        pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty\");\r",
									"        pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"        pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {    \r",
									"        pm.expect(responseData.mensaje).equals(\"Se han producido errores en la obtención de datos del solicitante\");\r",
									"        pm.expect(responseData.codigo).equals(\"SOL001\");\r",
									"        pm.expect(responseData.detalles).equals(\"El parámetro 'codigoExpediente' es obligatorio\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}solicitante/eliminarValoracion"
					},
					"response": []
				},
				{
					"name": "eliminarValoracionKOcodigoExpedienteMayor255",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {    \r",
									"        pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty\");\r",
									"        pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"        pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {    \r",
									"        pm.expect(responseData.mensaje).equals(\"Se han producido errores en la obtención de datos del solicitante\");\r",
									"        pm.expect(responseData.codigo).equals(\"SOL002\");\r",
									"        pm.expect(responseData.detalles).equals(\"El parámetro 'codigoExpediente' debe tener como máximo 255 caracteres\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{mayor255}}\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}solicitante/eliminarValoracion"
					},
					"response": []
				},
				{
					"name": "eliminarValoracionKOcodigoExpedienteErroneo",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {    \r",
									"        pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty\");\r",
									"        pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"        pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {    \r",
									"        pm.expect(responseData.mensaje).equals(\"Se ha producido un error en el borrado de la valoración\");\r",
									"        pm.expect(responseData.codigo).equals(\"SOL011\");\r",
									"        pm.expect(responseData.detalles).equals(\"No existe ningún expediente con el código proporcionado.\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{valorAleatorio}}\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}solicitante/eliminarValoracion"
					},
					"response": []
				},
				{
					"name": "eliminarValoracionKOcodigoEntidadInexistentes",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {    \r",
									"        pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty\");\r",
									"        pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"        pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {   \r",
									"        pm.expect(responseData.mensaje).equals(\"Se han producido errores en la obtención de datos del solicitante\");\r",
									"        pm.expect(responseData.codigo).equals(\"SOL003\");\r",
									"        pm.expect(responseData.detalles).equals(\"El parámetro 'codigoEntidad' es obligatorio\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{copiaABorrar}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}solicitante/eliminarValoracion"
					},
					"response": []
				},
				{
					"name": "eliminarValoracionKOcodigoEntidadVacio",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {    \r",
									"        pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty\");\r",
									"        pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"        pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {    \r",
									"        pm.expect(responseData.mensaje).equals(\"Se han producido errores en la obtención de datos del solicitante\");\r",
									"        pm.expect(responseData.codigo).equals(\"SOL003\");\r",
									"        pm.expect(responseData.detalles).equals(\"El parámetro 'codigoEntidad' es obligatorio\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{copiaABorrar}}\",\r\n    \"codigoEntidad\":\"\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}solicitante/eliminarValoracion"
					},
					"response": []
				},
				{
					"name": "eliminarValoracionKOcodigoEntidadMayor50",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {    \r",
									"        pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty\");\r",
									"        pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"        pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {    \r",
									"        pm.expect(responseData.mensaje).equals(\"Se han producido errores en la obtención de datos del solicitante\");\r",
									"        pm.expect(responseData.codigo).equals(\"SOL004\");\r",
									"        pm.expect(responseData.detalles).equals(\"El parámetro 'codigoEntidad' debe tener como máximo 50 caracteres\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{copiaABorrar}}\",\r\n    \"codigoEntidad\":\"{{mayor255}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}solicitante/eliminarValoracion"
					},
					"response": []
				},
				{
					"name": "eliminarValoracionKOcodigoEntidadErroneo",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {    \r",
									"        pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Mensaje should not be empty\");\r",
									"        pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"        pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {    \r",
									"        pm.expect(responseData.mensaje).equals(\"Se ha producido un error en el borrado de la valoración\");\r",
									"        pm.expect(responseData.codigo).equals(\"SOL010\");\r",
									"        pm.expect(responseData.detalles).equals(\"No existe ninguna entidad gestora con el código proporcionado.\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{copiaABorrar}}\",\r\n    \"codigoEntidad\":\"{{valorAleatorio}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}solicitante/eliminarValoracion"
					},
					"response": []
				}
			]
		},
		{
			"name": "getInformacionBRP",
			"item": [
				{
					"name": "getInformacionBRP OK",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var schemaRespuestaOk = {\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"informacionBrp\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"codigoExpediente\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"fechaNacimiento\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"codigoEntidad\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"restriccionGlobalPersona\": {\r",
									"          \"type\": \"null\"\r",
									"        },\r",
									"        \"baremoBrpValido\": {\r",
									"          \"type\": \"null\"\r",
									"        },\r",
									"        \"baremoBrpSecundario\": {\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"baremoBrpAnulado\": {\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"baramoBrpIncluido\": {\r",
									"          \"type\": \"null\"\r",
									"        },\r",
									"        \"motivoNoInclusionBrp\": {\r",
									"          \"type\": \"null\"\r",
									"        },\r",
									"        \"puntuacionesDominio\": {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"p1\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"puntuacion\": {\r",
									"                  \"type\": \"null\"\r",
									"                },\r",
									"                \"actividades\": {\r",
									"                  \"type\": \"object\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"puntuacion\",\r",
									"                \"actividades\"\r",
									"              ]\r",
									"            },\r",
									"            \"p2\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"puntuacion\": {\r",
									"                  \"type\": \"null\"\r",
									"                },\r",
									"                \"actividades\": {\r",
									"                  \"type\": \"object\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"puntuacion\",\r",
									"                \"actividades\"\r",
									"              ]\r",
									"            },\r",
									"            \"p3\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"puntuacion\": {\r",
									"                  \"type\": \"null\"\r",
									"                },\r",
									"                \"actividades\": {\r",
									"                  \"type\": \"object\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"puntuacion\",\r",
									"                \"actividades\"\r",
									"              ]\r",
									"            },\r",
									"            \"p4\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"puntuacion\": {\r",
									"                  \"type\": \"null\"\r",
									"                },\r",
									"                \"actividades\": {\r",
									"                  \"type\": \"object\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"puntuacion\",\r",
									"                \"actividades\"\r",
									"              ]\r",
									"            },\r",
									"            \"p5\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"puntuacion\": {\r",
									"                  \"type\": \"null\"\r",
									"                },\r",
									"                \"actividades\": {\r",
									"                  \"type\": \"object\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"puntuacion\",\r",
									"                \"actividades\"\r",
									"              ]\r",
									"            },\r",
									"            \"p6\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"puntuacion\": {\r",
									"                  \"type\": \"null\"\r",
									"                },\r",
									"                \"actividades\": {\r",
									"                  \"type\": \"object\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"puntuacion\",\r",
									"                \"actividades\"\r",
									"              ]\r",
									"            },\r",
									"            \"p7\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"puntuacion\": {\r",
									"                  \"type\": \"null\"\r",
									"                },\r",
									"                \"actividades\": {\r",
									"                  \"type\": \"object\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"puntuacion\",\r",
									"                \"actividades\"\r",
									"              ]\r",
									"            },\r",
									"            \"p8\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"puntuacion\": {\r",
									"                  \"type\": \"null\"\r",
									"                },\r",
									"                \"actividades\": {\r",
									"                  \"type\": \"object\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"puntuacion\",\r",
									"                \"actividades\"\r",
									"              ]\r",
									"            },\r",
									"            \"p9\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"puntuacion\": {\r",
									"                  \"type\": \"null\"\r",
									"                },\r",
									"                \"actividades\": {\r",
									"                  \"type\": \"object\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"puntuacion\",\r",
									"                \"actividades\"\r",
									"              ]\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"p1\",\r",
									"            \"p2\",\r",
									"            \"p3\",\r",
									"            \"p4\",\r",
									"            \"p5\",\r",
									"            \"p6\",\r",
									"            \"p7\",\r",
									"            \"p8\",\r",
									"            \"p9\"\r",
									"          ]\r",
									"        },\r",
									"        \"usuariosValoracion\": {\r",
									"          \"type\": \"object\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"codigoExpediente\",\r",
									"        \"fechaNacimiento\",\r",
									"        \"codigoEntidad\",\r",
									"        \"restriccionGlobalPersona\",\r",
									"        \"baremoBrpValido\",\r",
									"        \"baremoBrpSecundario\",\r",
									"        \"baremoBrpAnulado\",\r",
									"        \"baramoBrpIncluido\",\r",
									"        \"motivoNoInclusionBrp\",\r",
									"        \"puntuacionesDominio\",\r",
									"        \"usuariosValoracion\"\r",
									"      ]\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"informacionBrp\"\r",
									"  ]\r",
									"};\r",
									"pm.variables.set(\"schemaRespuestaOK\",schemaRespuestaOk,Object);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var schemaResultado = pm.variables.get('schemaRespuestaOK');\r",
									"\r",
									"const responseJson = pm.response.json();\r",
									"\r",
									"pm.test('Response status code is 200', function () {\r",
									"    pm.expect(pm.response.code).to.equal(200);\r",
									"})\r",
									"\r",
									"pm.test('Response Content-Type header is set to application/json', function () {\r",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
									"})\r",
									"\r",
									"pm.test(\"Response schema JSON\",()=> {\r",
									"    pm.expect(responseJson).to.have.jsonSchema(schemaResultado);\r",
									"});\r",
									"\r",
									"pm.test('InformacionClinica array is present and contains at least one element', function () {\r",
									"    pm.expect(responseJson).to.be.an('object');\r",
									"    pm.expect(responseJson.informacionBrp.puntuacionesDominio).to.exist.and.is.not.empty;\r",
									"})\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{ExpedienteBRP}}\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/getInformacionBRP"
					},
					"response": []
				},
				{
					"name": "getInformacionBRPKOEvalNoFinalizadaSinGFDP",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response status code is 400\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {\r",
									"    pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Message should not be empty\");\r",
									"    pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"    pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {\r",
									"    pm.expect(responseData.mensaje).equals(\"Se ha producido un error en la obtención del resultado de la evaluación\");\r",
									"    pm.expect(responseData.detalles).equals(\"No se ha finalizado la valoración de discapacidad del solicitante\");\r",
									"    pm.expect(responseData.codigo).equals(\"EVAL001\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{expedienteSinGFDP}}\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/getInformacionBRP"
					},
					"response": []
				},
				{
					"name": "getInformacionBRPKOcodigoExpedienteInexistente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response status code is 400\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {\r",
									"    pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Message should not be empty\");\r",
									"    pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"    pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {\r",
									"  pm.expect(responseData.mensaje).equals(\"Se han producido errores en la actualización del solicitante\");\r",
									"  pm.expect(responseData.detalles).equals(\"El parámetro \\'codigoExpediente\\' es obligatorio\");\r",
									"  pm.expect(responseData.codigo).equals(\"SOL001\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/getInformacionBRP"
					},
					"response": []
				},
				{
					"name": "getInformacionBRPKOcodigoExpedienteVacio",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response status code is 400\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {\r",
									"    pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Message should not be empty\");\r",
									"    pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"    pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {\r",
									"  pm.expect(responseData.mensaje).equals(\"Se han producido errores en la actualización del solicitante\");\r",
									"  pm.expect(responseData.detalles).equals(\"El parámetro \\'codigoExpediente\\' es obligatorio\");\r",
									"  pm.expect(responseData.codigo).equals(\"SOL001\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n     \"codigoExpediente\":\"\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/getInformacionBRP"
					},
					"response": []
				},
				{
					"name": "getInformacionBRPKOcodigoExpedienteIncorrecto",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response status code is 400\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {\r",
									"    pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Message should not be empty\");\r",
									"    pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"    pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {\r",
									"  pm.expect(responseData.mensaje).equals(\"Se ha producido un error en la obtención del resultado de la evaluación\");\r",
									"  pm.expect(responseData.detalles).equals(\"No existe ningún expediente con el código proporcionado.\");\r",
									"  pm.expect(responseData.codigo).equals(\"SOL011\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{valorAleatorio}}\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/getInformacionBRP"
					},
					"response": []
				},
				{
					"name": "getInformacionBRPKOcodigoExpedienteMayor255",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response status code is 400\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {\r",
									"    pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Message should not be empty\");\r",
									"    pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"    pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {\r",
									"  pm.expect(responseData.mensaje).equals(\"Se han producido errores en la actualización del solicitante\");\r",
									"  pm.expect(responseData.detalles).equals(\"El parámetro 'codigoExpediente' debe tener como máximo 255 caracteres\");\r",
									"  pm.expect(responseData.codigo).equals(\"SOL002\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{mayor255}}\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/getInformacionBRP"
					},
					"response": []
				},
				{
					"name": "getInformacionBRPKOcodigoEntidadMayor50",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response status code is 400\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {\r",
									"    pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Message should not be empty\");\r",
									"    pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"    pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {\r",
									"  pm.expect(responseData.mensaje).equals(\"Se han producido errores en la actualización del solicitante\");\r",
									"  pm.expect(responseData.detalles).equals(\"El parámetro 'codigoEntidad' debe tener como máximo 50 caracteres\");\r",
									"  pm.expect(responseData.codigo).equals(\"SOL004\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{ExpedienteBRP}}\",\r\n    \"codigoEntidad\":\"{{mayor255}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/getInformacionBRP"
					},
					"response": []
				},
				{
					"name": "getInformacionBRPKOcodigoEntidadVacia",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response status code is 400\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {\r",
									"    pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Message should not be empty\");\r",
									"    pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"    pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {\r",
									"  pm.expect(responseData.mensaje).equals(\"Se han producido errores en la actualización del solicitante\");\r",
									"  pm.expect(responseData.detalles).equals(\"El parámetro \\'codigoEntidad\\' es obligatorio\");\r",
									"  pm.expect(responseData.codigo).equals(\"SOL003\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{ExpedienteBRP}}\",\r\n    \"codigoEntidad\":\"\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/getInformacionBRP"
					},
					"response": []
				},
				{
					"name": "getInformacionBRPKOcodigoEntidadIncorrecta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response status code is 400\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {\r",
									"    pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Message should not be empty\");\r",
									"    pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"    pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {\r",
									"  pm.expect(responseData.mensaje).equals(\"Se ha producido un error en la obtención del resultado de la evaluación\");\r",
									"  pm.expect(responseData.detalles).equals(\"No existe ninguna entidad gestora con el código proporcionado.\");\r",
									"  pm.expect(responseData.codigo).equals(\"SOL010\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{ExpedienteBRP}}\",\r\n    \"codigoEntidad\":\"{{valorAleatorio}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/getInformacionBRP"
					},
					"response": []
				}
			]
		},
		{
			"name": "getInformacionBFCA",
			"item": [
				{
					"name": "getInformacionBFCAOK",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var schemaRespuestaOk = {};\r",
									"pm.variables.set(\"schemaRespuestaOK\",schemaRespuestaOk,Object);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var schemaResultado = pm.variables.get('schemaRespuestaOK');\r",
									"\r",
									"const responseJson = pm.response.json();\r",
									"\r",
									"pm.test('Response status code is 200', function () {\r",
									"    pm.expect(pm.response.code).to.equal(200);\r",
									"})\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response schema JSON\",()=> {\r",
									"    pm.expect(responseJson).to.have.jsonSchema(schemaResultado);\r",
									"});\r",
									"\r",
									"pm.test('InformacionClinica array is present and contains at least one element', function () {\r",
									"    pm.expect(responseJson).to.be.an('object');\r",
									"    pm.expect(responseJson.informeSintesis.informacionClinica).to.exist.and.to.be.an('array').that.is.not.empty;\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{ExpedienteBFCA}}\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/getInformacionBFCA"
					},
					"response": []
				},
				{
					"name": "getInformacionBFCAKOEvalNoFinalizadaSinGFDP",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response status code is 400\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {\r",
									"    pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Message should not be empty\");\r",
									"    pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"    pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {\r",
									"    pm.expect(responseData.mensaje).equals(\"Se ha producido un error en la obtención del resultado de la evaluación\");\r",
									"    pm.expect(responseData.detalles).equals(\"No se ha finalizado la valoración de discapacidad del solicitante\");\r",
									"    pm.expect(responseData.codigo).equals(\"EVAL001\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{expedienteSinGFDP}}\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/getResultado"
					},
					"response": []
				},
				{
					"name": "getInformacionBFCAKOcodigoExpedienteInexistente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response status code is 400\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {\r",
									"    pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Message should not be empty\");\r",
									"    pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"    pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {\r",
									"  pm.expect(responseData.mensaje).equals(\"Se han producido errores en la actualización del solicitante\");\r",
									"  pm.expect(responseData.detalles).equals(\"El parámetro \\'codigoExpediente\\' es obligatorio\");\r",
									"  pm.expect(responseData.codigo).equals(\"SOL001\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/getResultado"
					},
					"response": []
				},
				{
					"name": "getInformacionBFCAKOcodigoExpedienteVacio",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response status code is 400\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {\r",
									"    pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Message should not be empty\");\r",
									"    pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"    pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {\r",
									"  pm.expect(responseData.mensaje).equals(\"Se han producido errores en la actualización del solicitante\");\r",
									"  pm.expect(responseData.detalles).equals(\"El parámetro \\'codigoExpediente\\' es obligatorio\");\r",
									"  pm.expect(responseData.codigo).equals(\"SOL001\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n     \"codigoExpediente\":\"\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/getResultado"
					},
					"response": []
				},
				{
					"name": "getInformacionBFCAKOcodigoExpedienteIncorrecto",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response status code is 400\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {\r",
									"    pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Message should not be empty\");\r",
									"    pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"    pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {\r",
									"  pm.expect(responseData.mensaje).equals(\"Se ha producido un error en la obtención del resultado de la evaluación\");\r",
									"  pm.expect(responseData.detalles).equals(\"No existe ningún expediente con el código proporcionado.\");\r",
									"  pm.expect(responseData.codigo).equals(\"SOL011\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{valorAleatorio}}\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/getResultado"
					},
					"response": []
				},
				{
					"name": "getInformacionBFCAKOcodigoExpedienteMayor255",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response status code is 400\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {\r",
									"    pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Message should not be empty\");\r",
									"    pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"    pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {\r",
									"  pm.expect(responseData.mensaje).equals(\"Se han producido errores en la actualización del solicitante\");\r",
									"  pm.expect(responseData.detalles).equals(\"El parámetro 'codigoExpediente' debe tener como máximo 255 caracteres\");\r",
									"  pm.expect(responseData.codigo).equals(\"SOL002\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{mayor255}}\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/getResultado"
					},
					"response": []
				},
				{
					"name": "getInformacionBFCAKOcodigoEntidadMayor50",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response status code is 400\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {\r",
									"    pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Message should not be empty\");\r",
									"    pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"    pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {\r",
									"  pm.expect(responseData.mensaje).equals(\"Se han producido errores en la actualización del solicitante\");\r",
									"  pm.expect(responseData.detalles).equals(\"El parámetro 'codigoEntidad' debe tener como máximo 50 caracteres\");\r",
									"  pm.expect(responseData.codigo).equals(\"SOL004\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{solicitante}}\",\r\n    \"codigoEntidad\":\"{{mayor255}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/getResultado"
					},
					"response": []
				},
				{
					"name": "getInformacionBFCAKOcodigoEntidadVacia",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response status code is 400\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {\r",
									"    pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Message should not be empty\");\r",
									"    pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"    pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {\r",
									"  pm.expect(responseData.mensaje).equals(\"Se han producido errores en la actualización del solicitante\");\r",
									"  pm.expect(responseData.detalles).equals(\"El parámetro \\'codigoEntidad\\' es obligatorio\");\r",
									"  pm.expect(responseData.codigo).equals(\"SOL003\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{solicitante}}\",\r\n    \"codigoEntidad\":\"\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/getResultado"
					},
					"response": []
				},
				{
					"name": "getInformacionBFCAKOcodigoEntidadIncorrecta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response status code is 400\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {\r",
									"    pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Message should not be empty\");\r",
									"    pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"    pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {\r",
									"  pm.expect(responseData.mensaje).equals(\"Se ha producido un error en la obtención del resultado de la evaluación\");\r",
									"  pm.expect(responseData.detalles).equals(\"No existe ninguna entidad gestora con el código proporcionado.\");\r",
									"  pm.expect(responseData.codigo).equals(\"SOL010\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{solicitante}}\",\r\n    \"codigoEntidad\":\"{{valorAleatorio}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/getResultado"
					},
					"response": []
				}
			]
		},
		{
			"name": "getInformacionClinica",
			"item": [
				{
					"name": "getInformacionClinicaOK",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var schemaRespuestaOk = {\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"codigoExpediente\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"fechaNacimiento\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"codigoEntidad\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"comentarioProfesional1\": {\r",
									"      \"type\": \"null\"\r",
									"    },\r",
									"    \"comentarioProfesional2\": {\r",
									"      \"type\": \"null\"\r",
									"    },\r",
									"    \"comentarioProfesional3\": {\r",
									"      \"type\": \"null\"\r",
									"    },\r",
									"    \"condicionesSalud\": {\r",
									"      \"type\": \"array\",\r",
									"      \"items\": [\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"codigoCie10\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"posicionCie10\": {\r",
									"              \"type\": \"integer\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"codigoCie10\",\r",
									"            \"posicionCie10\"\r",
									"          ]\r",
									"        }\r",
									"      ]\r",
									"    },\r",
									"    \"deficienciasSalud\": {\r",
									"      \"type\": \"array\",\r",
									"      \"items\": {}\r",
									"    },\r",
									"    \"usuariosValoracion\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"0\": {\r",
									"          \"type\": \"string\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"0\"\r",
									"      ]\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"codigoExpediente\",\r",
									"    \"fechaNacimiento\",\r",
									"    \"codigoEntidad\",\r",
									"    \"comentarioProfesional1\",\r",
									"    \"comentarioProfesional2\",\r",
									"    \"comentarioProfesional3\",\r",
									"    \"condicionesSalud\",\r",
									"    \"deficienciasSalud\",\r",
									"    \"usuariosValoracion\"\r",
									"  ]\r",
									"};\r",
									"pm.variables.set(\"schemaRespuestaOK\",schemaRespuestaOk,Object);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var schemaResultado = pm.variables.get('schemaRespuestaOK');\r",
									"\r",
									"const responseJson = pm.response.json();\r",
									"\r",
									"pm.test('Response status code is 200', function () {\r",
									"    pm.expect(pm.response.code).to.equal(200);\r",
									"})\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response schema JSON\",()=> {\r",
									"    pm.expect(responseJson).to.have.jsonSchema(schemaResultado);\r",
									"});\r",
									"\r",
									"pm.test('InformacionClinica array is present and contains at least one element', function () {\r",
									"    pm.expect(responseJson).to.be.an('object');\r",
									"    pm.expect(responseJson.condicionesSalud).to.exist.and.is.not.empty;\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{ExpedienteInformacionClinica}}\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/getInformacionClinica"
					},
					"response": []
				},
				{
					"name": "getInformacionClinicaKOcodigoExpedienteInexistente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response status code is 400\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {\r",
									"    pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Message should not be empty\");\r",
									"    pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"    pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {\r",
									"  pm.expect(responseData.mensaje).equals(\"Se han producido errores en la actualización del solicitante\");\r",
									"  pm.expect(responseData.detalles).equals(\"El parámetro \\'codigoExpediente\\' es obligatorio\");\r",
									"  pm.expect(responseData.codigo).equals(\"SOL001\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/getInformacionClinica"
					},
					"response": []
				},
				{
					"name": "getInformacionClinicaKOcodigoExpedienteVacio",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response status code is 400\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {\r",
									"    pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Message should not be empty\");\r",
									"    pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"    pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {\r",
									"  pm.expect(responseData.mensaje).equals(\"Se han producido errores en la actualización del solicitante\");\r",
									"  pm.expect(responseData.detalles).equals(\"El parámetro \\'codigoExpediente\\' es obligatorio\");\r",
									"  pm.expect(responseData.codigo).equals(\"SOL001\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n     \"codigoExpediente\":\"\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/getInformacionClinica"
					},
					"response": []
				},
				{
					"name": "getInformacionClinicaKOcodigoExpedienteIncorrecto",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response status code is 400\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {\r",
									"    pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Message should not be empty\");\r",
									"    pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"    pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {\r",
									"  pm.expect(responseData.mensaje).equals(\"Se ha producido un error en la obtención del resultado de la evaluación\");\r",
									"  pm.expect(responseData.detalles).equals(\"No existe ningún expediente con el código proporcionado.\");\r",
									"  pm.expect(responseData.codigo).equals(\"SOL011\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{valorAleatorio}}\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/getInformacionClinica"
					},
					"response": []
				},
				{
					"name": "getInformacionClinicaKOcodigoExpedienteMayor255",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response status code is 400\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {\r",
									"    pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Message should not be empty\");\r",
									"    pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"    pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {\r",
									"  pm.expect(responseData.mensaje).equals(\"Se han producido errores en la actualización del solicitante\");\r",
									"  pm.expect(responseData.detalles).equals(\"El parámetro 'codigoExpediente' debe tener como máximo 255 caracteres\");\r",
									"  pm.expect(responseData.codigo).equals(\"SOL002\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{mayor255}}\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/getInformacionClinica"
					},
					"response": []
				},
				{
					"name": "getInformacionClinicaKOcodigoEntidadMayor50",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response status code is 400\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {\r",
									"    pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Message should not be empty\");\r",
									"    pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"    pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {\r",
									"  pm.expect(responseData.mensaje).equals(\"Se han producido errores en la actualización del solicitante\");\r",
									"  pm.expect(responseData.detalles).equals(\"El parámetro 'codigoEntidad' debe tener como máximo 50 caracteres\");\r",
									"  pm.expect(responseData.codigo).equals(\"SOL004\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{solicitante}}\",\r\n    \"codigoEntidad\":\"{{mayor255}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/getInformacionClinica"
					},
					"response": []
				},
				{
					"name": "getInformacionClinicaKOcodigoEntidadVacia",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response status code is 400\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {\r",
									"    pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Message should not be empty\");\r",
									"    pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"    pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {\r",
									"  pm.expect(responseData.mensaje).equals(\"Se han producido errores en la actualización del solicitante\");\r",
									"  pm.expect(responseData.detalles).equals(\"El parámetro \\'codigoEntidad\\' es obligatorio\");\r",
									"  pm.expect(responseData.codigo).equals(\"SOL003\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{ExpedienteInformacionClinica}}\",\r\n    \"codigoEntidad\":\"\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/getInformacionClinica"
					},
					"response": []
				},
				{
					"name": "getInformacionClinicaKOcodigoEntidadIncorrecta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response status code is 400\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {\r",
									"    pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Message should not be empty\");\r",
									"    pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"    pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {\r",
									"  pm.expect(responseData.mensaje).equals(\"Se ha producido un error en la obtención del resultado de la evaluación\");\r",
									"  pm.expect(responseData.detalles).equals(\"No existe ninguna entidad gestora con el código proporcionado.\");\r",
									"  pm.expect(responseData.codigo).equals(\"SOL010\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{ExpedienteInformacionClinica}}\",\r\n    \"codigoEntidad\":\"{{valorAleatorio}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/getInformacionClinica"
					},
					"response": []
				}
			]
		},
		{
			"name": "getInformacionBLA",
			"item": [
				{
					"name": "getInformacionBLAOK",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var schemaRespuestaOk = {\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"codigoExpediente\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"fechaNacimiento\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"codigoEntidad\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"limitacionGlobalPersona\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"limitacionGraveAutocuidado\": {\r",
									"      \"type\": \"null\"\r",
									"    },\r",
									"    \"limitacionEnMovilidad\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"baremoBlaValido\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"usoBlgtaa\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"baremoBlgtaPrincipal\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"baremoBlaPrincipal\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"baremoBlaSecundario\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"baremoBlaIncluido\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"motivoNoInclusionBla\": {\r",
									"      \"type\": \"null\"\r",
									"    },\r",
									"    \"baremosBLA\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"BLAResultado\": {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"evaluado\": {\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \"fechaEvaluacion\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"limitacionGlobalPersona\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"limitacionEnMovilidad\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"movilidadReducida\": {\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \"cicloVital\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"puntuacionesPorDominio\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"1\": {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"descripcionDominio\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"nivel\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"nivelGravedad\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"puntuacion\": {\r",
									"                      \"type\": \"integer\"\r",
									"                    },\r",
									"                    \"actividades\": {\r",
									"                      \"type\": \"object\",\r",
									"                      \"properties\": {\r",
									"                        \"a166\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a170\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a175\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a140\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a145\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a150\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a160\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a110\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a115\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a120\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a129\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a130\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a135\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a155\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a159\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a161\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a163\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a172\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a177\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a179\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a198\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a199\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        }\r",
									"                      },\r",
									"                      \"required\": [\r",
									"                        \"a166\",\r",
									"                        \"a170\",\r",
									"                        \"a175\",\r",
									"                        \"a140\",\r",
									"                        \"a145\",\r",
									"                        \"a150\",\r",
									"                        \"a160\",\r",
									"                        \"a110\",\r",
									"                        \"a115\",\r",
									"                        \"a120\",\r",
									"                        \"a129\",\r",
									"                        \"a130\",\r",
									"                        \"a135\",\r",
									"                        \"a155\",\r",
									"                        \"a159\",\r",
									"                        \"a161\",\r",
									"                        \"a163\",\r",
									"                        \"a172\",\r",
									"                        \"a177\",\r",
									"                        \"a179\",\r",
									"                        \"a198\",\r",
									"                        \"a199\"\r",
									"                      ]\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"descripcionDominio\",\r",
									"                    \"nivel\",\r",
									"                    \"nivelGravedad\",\r",
									"                    \"puntuacion\",\r",
									"                    \"actividades\"\r",
									"                  ]\r",
									"                },\r",
									"                \"2\": {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"descripcionDominio\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"nivel\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"nivelGravedad\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"puntuacion\": {\r",
									"                      \"type\": \"integer\"\r",
									"                    },\r",
									"                    \"actividades\": {\r",
									"                      \"type\": \"object\",\r",
									"                      \"properties\": {\r",
									"                        \"a230\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a240\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a210\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a250\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a220\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a298\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a299\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        }\r",
									"                      },\r",
									"                      \"required\": [\r",
									"                        \"a230\",\r",
									"                        \"a240\",\r",
									"                        \"a210\",\r",
									"                        \"a250\",\r",
									"                        \"a220\",\r",
									"                        \"a298\",\r",
									"                        \"a299\"\r",
									"                      ]\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"descripcionDominio\",\r",
									"                    \"nivel\",\r",
									"                    \"nivelGravedad\",\r",
									"                    \"puntuacion\",\r",
									"                    \"actividades\"\r",
									"                  ]\r",
									"                },\r",
									"                \"3\": {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"descripcionDominio\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"nivel\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"nivelGravedad\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"puntuacion\": {\r",
									"                      \"type\": \"integer\"\r",
									"                    },\r",
									"                    \"actividades\": {\r",
									"                      \"type\": \"object\",\r",
									"                      \"properties\": {\r",
									"                        \"a315\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a360\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a350\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a310\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a330\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a320\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a325\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a329\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a335\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a340\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a345\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a349\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a355\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a369\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a398\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a399\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        }\r",
									"                      },\r",
									"                      \"required\": [\r",
									"                        \"a315\",\r",
									"                        \"a360\",\r",
									"                        \"a350\",\r",
									"                        \"a310\",\r",
									"                        \"a330\",\r",
									"                        \"a320\",\r",
									"                        \"a325\",\r",
									"                        \"a329\",\r",
									"                        \"a335\",\r",
									"                        \"a340\",\r",
									"                        \"a345\",\r",
									"                        \"a349\",\r",
									"                        \"a355\",\r",
									"                        \"a369\",\r",
									"                        \"a398\",\r",
									"                        \"a399\"\r",
									"                      ]\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"descripcionDominio\",\r",
									"                    \"nivel\",\r",
									"                    \"nivelGravedad\",\r",
									"                    \"puntuacion\",\r",
									"                    \"actividades\"\r",
									"                  ]\r",
									"                },\r",
									"                \"4\": {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"descripcionDominio\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"nivel\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"nivelGravedad\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"puntuacion\": {\r",
									"                      \"type\": \"integer\"\r",
									"                    },\r",
									"                    \"actividades\": {\r",
									"                      \"type\": \"object\",\r",
									"                      \"properties\": {\r",
									"                        \"a430\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a4600\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a4602\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a440\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a415\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a450\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a4702\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a410\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a4751\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a420\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a429\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a435\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a445\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a449\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a455\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a460\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a465\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a469\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a470\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a475\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a480\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a489\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a498\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a499\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        }\r",
									"                      },\r",
									"                      \"required\": [\r",
									"                        \"a430\",\r",
									"                        \"a4600\",\r",
									"                        \"a4602\",\r",
									"                        \"a440\",\r",
									"                        \"a415\",\r",
									"                        \"a450\",\r",
									"                        \"a4702\",\r",
									"                        \"a410\",\r",
									"                        \"a4751\",\r",
									"                        \"a420\",\r",
									"                        \"a429\",\r",
									"                        \"a435\",\r",
									"                        \"a445\",\r",
									"                        \"a449\",\r",
									"                        \"a455\",\r",
									"                        \"a460\",\r",
									"                        \"a465\",\r",
									"                        \"a469\",\r",
									"                        \"a470\",\r",
									"                        \"a475\",\r",
									"                        \"a480\",\r",
									"                        \"a489\",\r",
									"                        \"a498\",\r",
									"                        \"a499\"\r",
									"                      ]\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"descripcionDominio\",\r",
									"                    \"nivel\",\r",
									"                    \"nivelGravedad\",\r",
									"                    \"puntuacion\",\r",
									"                    \"actividades\"\r",
									"                  ]\r",
									"                },\r",
									"                \"5\": {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"descripcionDominio\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"nivel\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"nivelGravedad\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"puntuacion\": {\r",
									"                      \"type\": \"integer\"\r",
									"                    },\r",
									"                    \"actividades\": {\r",
									"                      \"type\": \"object\",\r",
									"                      \"properties\": {\r",
									"                        \"a510\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a540\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a520\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a560\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a550\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a530\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a570\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a571\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a598\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a599\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        }\r",
									"                      },\r",
									"                      \"required\": [\r",
									"                        \"a510\",\r",
									"                        \"a540\",\r",
									"                        \"a520\",\r",
									"                        \"a560\",\r",
									"                        \"a550\",\r",
									"                        \"a530\",\r",
									"                        \"a570\",\r",
									"                        \"a571\",\r",
									"                        \"a598\",\r",
									"                        \"a599\"\r",
									"                      ]\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"descripcionDominio\",\r",
									"                    \"nivel\",\r",
									"                    \"nivelGravedad\",\r",
									"                    \"puntuacion\",\r",
									"                    \"actividades\"\r",
									"                  ]\r",
									"                },\r",
									"                \"6\": {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"descripcionDominio\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"nivel\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"nivelGravedad\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"puntuacion\": {\r",
									"                      \"type\": \"integer\"\r",
									"                    },\r",
									"                    \"actividades\": {\r",
									"                      \"type\": \"object\",\r",
									"                      \"properties\": {\r",
									"                        \"a6200\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a640\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a630\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a610\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a620\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a629\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a649\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a650\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a660\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a669\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a698\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a699\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        }\r",
									"                      },\r",
									"                      \"required\": [\r",
									"                        \"a6200\",\r",
									"                        \"a640\",\r",
									"                        \"a630\",\r",
									"                        \"a610\",\r",
									"                        \"a620\",\r",
									"                        \"a629\",\r",
									"                        \"a649\",\r",
									"                        \"a650\",\r",
									"                        \"a660\",\r",
									"                        \"a669\",\r",
									"                        \"a698\",\r",
									"                        \"a699\"\r",
									"                      ]\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"descripcionDominio\",\r",
									"                    \"nivel\",\r",
									"                    \"nivelGravedad\",\r",
									"                    \"puntuacion\",\r",
									"                    \"actividades\"\r",
									"                  ]\r",
									"                },\r",
									"                \"7\": {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"descripcionDominio\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"nivel\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"nivelGravedad\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"puntuacion\": {\r",
									"                      \"type\": \"integer\"\r",
									"                    },\r",
									"                    \"actividades\": {\r",
									"                      \"type\": \"object\",\r",
									"                      \"properties\": {\r",
									"                        \"a730\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a750\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a760\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a740\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a710\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a720\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a729\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a770\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a779\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a798\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a799\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        }\r",
									"                      },\r",
									"                      \"required\": [\r",
									"                        \"a730\",\r",
									"                        \"a750\",\r",
									"                        \"a760\",\r",
									"                        \"a740\",\r",
									"                        \"a710\",\r",
									"                        \"a720\",\r",
									"                        \"a729\",\r",
									"                        \"a770\",\r",
									"                        \"a779\",\r",
									"                        \"a798\",\r",
									"                        \"a799\"\r",
									"                      ]\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"descripcionDominio\",\r",
									"                    \"nivel\",\r",
									"                    \"nivelGravedad\",\r",
									"                    \"puntuacion\",\r",
									"                    \"actividades\"\r",
									"                  ]\r",
									"                },\r",
									"                \"8\": {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"descripcionDominio\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"nivel\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"nivelGravedad\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"puntuacion\": {\r",
									"                      \"type\": \"integer\"\r",
									"                    },\r",
									"                    \"actividades\": {\r",
									"                      \"type\": \"object\",\r",
									"                      \"properties\": {\r",
									"                        \"a825\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a860\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a870\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a815\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a820\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a850\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a880\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a810\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a830\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a839\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a840\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a845\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a855\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a859\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a865\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a879\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a898\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a899\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        }\r",
									"                      },\r",
									"                      \"required\": [\r",
									"                        \"a825\",\r",
									"                        \"a860\",\r",
									"                        \"a870\",\r",
									"                        \"a815\",\r",
									"                        \"a820\",\r",
									"                        \"a850\",\r",
									"                        \"a880\",\r",
									"                        \"a810\",\r",
									"                        \"a830\",\r",
									"                        \"a839\",\r",
									"                        \"a840\",\r",
									"                        \"a845\",\r",
									"                        \"a855\",\r",
									"                        \"a859\",\r",
									"                        \"a865\",\r",
									"                        \"a879\",\r",
									"                        \"a898\",\r",
									"                        \"a899\"\r",
									"                      ]\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"descripcionDominio\",\r",
									"                    \"nivel\",\r",
									"                    \"nivelGravedad\",\r",
									"                    \"puntuacion\",\r",
									"                    \"actividades\"\r",
									"                  ]\r",
									"                },\r",
									"                \"9\": {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"descripcionDominio\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"nivel\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"nivelGravedad\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"puntuacion\": {\r",
									"                      \"type\": \"integer\"\r",
									"                    },\r",
									"                    \"actividades\": {\r",
									"                      \"type\": \"object\",\r",
									"                      \"properties\": {\r",
									"                        \"a910\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a920\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a930\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a940\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a950\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a998\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a999\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        }\r",
									"                      },\r",
									"                      \"required\": [\r",
									"                        \"a910\",\r",
									"                        \"a920\",\r",
									"                        \"a930\",\r",
									"                        \"a940\",\r",
									"                        \"a950\",\r",
									"                        \"a998\",\r",
									"                        \"a999\"\r",
									"                      ]\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"descripcionDominio\",\r",
									"                    \"nivel\",\r",
									"                    \"nivelGravedad\",\r",
									"                    \"puntuacion\",\r",
									"                    \"actividades\"\r",
									"                  ]\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"1\",\r",
									"                \"2\",\r",
									"                \"3\",\r",
									"                \"4\",\r",
									"                \"5\",\r",
									"                \"6\",\r",
									"                \"7\",\r",
									"                \"8\",\r",
									"                \"9\"\r",
									"              ]\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"evaluado\",\r",
									"            \"fechaEvaluacion\",\r",
									"            \"limitacionGlobalPersona\",\r",
									"            \"limitacionEnMovilidad\",\r",
									"            \"movilidadReducida\",\r",
									"            \"cicloVital\",\r",
									"            \"puntuacionesPorDominio\"\r",
									"          ]\r",
									"        },\r",
									"        \"BLAProfesional1\": {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"evaluado\": {\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \"fechaEvaluacion\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"limitacionGlobalPersona\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"limitacionEnMovilidad\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"movilidadReducida\": {\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \"cicloVital\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"puntuacionesPorDominio\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"1\": {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"descripcionDominio\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"nivel\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"nivelGravedad\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"puntuacion\": {\r",
									"                      \"type\": \"integer\"\r",
									"                    },\r",
									"                    \"actividades\": {\r",
									"                      \"type\": \"object\",\r",
									"                      \"properties\": {\r",
									"                        \"a166\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a175\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a170\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a140\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a145\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a150\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a160\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a110\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a115\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a120\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a129\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a130\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a135\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a155\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a159\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a161\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a163\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a172\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a177\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a179\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a198\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a199\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        }\r",
									"                      },\r",
									"                      \"required\": [\r",
									"                        \"a166\",\r",
									"                        \"a175\",\r",
									"                        \"a170\",\r",
									"                        \"a140\",\r",
									"                        \"a145\",\r",
									"                        \"a150\",\r",
									"                        \"a160\",\r",
									"                        \"a110\",\r",
									"                        \"a115\",\r",
									"                        \"a120\",\r",
									"                        \"a129\",\r",
									"                        \"a130\",\r",
									"                        \"a135\",\r",
									"                        \"a155\",\r",
									"                        \"a159\",\r",
									"                        \"a161\",\r",
									"                        \"a163\",\r",
									"                        \"a172\",\r",
									"                        \"a177\",\r",
									"                        \"a179\",\r",
									"                        \"a198\",\r",
									"                        \"a199\"\r",
									"                      ]\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"descripcionDominio\",\r",
									"                    \"nivel\",\r",
									"                    \"nivelGravedad\",\r",
									"                    \"puntuacion\",\r",
									"                    \"actividades\"\r",
									"                  ]\r",
									"                },\r",
									"                \"2\": {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"descripcionDominio\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"nivel\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"nivelGravedad\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"puntuacion\": {\r",
									"                      \"type\": \"integer\"\r",
									"                    },\r",
									"                    \"actividades\": {\r",
									"                      \"type\": \"object\",\r",
									"                      \"properties\": {\r",
									"                        \"a240\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a230\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a210\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a250\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a220\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a298\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a299\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        }\r",
									"                      },\r",
									"                      \"required\": [\r",
									"                        \"a240\",\r",
									"                        \"a230\",\r",
									"                        \"a210\",\r",
									"                        \"a250\",\r",
									"                        \"a220\",\r",
									"                        \"a298\",\r",
									"                        \"a299\"\r",
									"                      ]\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"descripcionDominio\",\r",
									"                    \"nivel\",\r",
									"                    \"nivelGravedad\",\r",
									"                    \"puntuacion\",\r",
									"                    \"actividades\"\r",
									"                  ]\r",
									"                },\r",
									"                \"3\": {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"descripcionDominio\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"nivel\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"nivelGravedad\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"puntuacion\": {\r",
									"                      \"type\": \"integer\"\r",
									"                    },\r",
									"                    \"actividades\": {\r",
									"                      \"type\": \"object\",\r",
									"                      \"properties\": {\r",
									"                        \"a360\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a350\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a315\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a310\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a330\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a320\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a325\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a329\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a335\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a340\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a345\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a349\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a355\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a369\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a398\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a399\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        }\r",
									"                      },\r",
									"                      \"required\": [\r",
									"                        \"a360\",\r",
									"                        \"a350\",\r",
									"                        \"a315\",\r",
									"                        \"a310\",\r",
									"                        \"a330\",\r",
									"                        \"a320\",\r",
									"                        \"a325\",\r",
									"                        \"a329\",\r",
									"                        \"a335\",\r",
									"                        \"a340\",\r",
									"                        \"a345\",\r",
									"                        \"a349\",\r",
									"                        \"a355\",\r",
									"                        \"a369\",\r",
									"                        \"a398\",\r",
									"                        \"a399\"\r",
									"                      ]\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"descripcionDominio\",\r",
									"                    \"nivel\",\r",
									"                    \"nivelGravedad\",\r",
									"                    \"puntuacion\",\r",
									"                    \"actividades\"\r",
									"                  ]\r",
									"                },\r",
									"                \"4\": {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"descripcionDominio\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"nivel\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"nivelGravedad\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"puntuacion\": {\r",
									"                      \"type\": \"integer\"\r",
									"                    },\r",
									"                    \"actividades\": {\r",
									"                      \"type\": \"object\",\r",
									"                      \"properties\": {\r",
									"                        \"a440\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a4702\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a4602\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a4600\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a450\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a415\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a430\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a410\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a4751\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a420\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a429\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a435\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a445\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a449\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a455\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a460\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a465\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a469\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a470\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a475\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a480\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a489\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a498\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a499\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        }\r",
									"                      },\r",
									"                      \"required\": [\r",
									"                        \"a440\",\r",
									"                        \"a4702\",\r",
									"                        \"a4602\",\r",
									"                        \"a4600\",\r",
									"                        \"a450\",\r",
									"                        \"a415\",\r",
									"                        \"a430\",\r",
									"                        \"a410\",\r",
									"                        \"a4751\",\r",
									"                        \"a420\",\r",
									"                        \"a429\",\r",
									"                        \"a435\",\r",
									"                        \"a445\",\r",
									"                        \"a449\",\r",
									"                        \"a455\",\r",
									"                        \"a460\",\r",
									"                        \"a465\",\r",
									"                        \"a469\",\r",
									"                        \"a470\",\r",
									"                        \"a475\",\r",
									"                        \"a480\",\r",
									"                        \"a489\",\r",
									"                        \"a498\",\r",
									"                        \"a499\"\r",
									"                      ]\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"descripcionDominio\",\r",
									"                    \"nivel\",\r",
									"                    \"nivelGravedad\",\r",
									"                    \"puntuacion\",\r",
									"                    \"actividades\"\r",
									"                  ]\r",
									"                },\r",
									"                \"5\": {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"descripcionDominio\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"nivel\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"nivelGravedad\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"puntuacion\": {\r",
									"                      \"type\": \"integer\"\r",
									"                    },\r",
									"                    \"actividades\": {\r",
									"                      \"type\": \"object\",\r",
									"                      \"properties\": {\r",
									"                        \"a560\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a540\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a520\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a570\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a550\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a530\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a510\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a571\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a598\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a599\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        }\r",
									"                      },\r",
									"                      \"required\": [\r",
									"                        \"a560\",\r",
									"                        \"a540\",\r",
									"                        \"a520\",\r",
									"                        \"a570\",\r",
									"                        \"a550\",\r",
									"                        \"a530\",\r",
									"                        \"a510\",\r",
									"                        \"a571\",\r",
									"                        \"a598\",\r",
									"                        \"a599\"\r",
									"                      ]\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"descripcionDominio\",\r",
									"                    \"nivel\",\r",
									"                    \"nivelGravedad\",\r",
									"                    \"puntuacion\",\r",
									"                    \"actividades\"\r",
									"                  ]\r",
									"                },\r",
									"                \"6\": {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"descripcionDominio\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"nivel\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"nivelGravedad\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"puntuacion\": {\r",
									"                      \"type\": \"integer\"\r",
									"                    },\r",
									"                    \"actividades\": {\r",
									"                      \"type\": \"object\",\r",
									"                      \"properties\": {\r",
									"                        \"a640\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a6200\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a630\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a610\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a620\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a629\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a649\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a650\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a660\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a669\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a698\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a699\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        }\r",
									"                      },\r",
									"                      \"required\": [\r",
									"                        \"a640\",\r",
									"                        \"a6200\",\r",
									"                        \"a630\",\r",
									"                        \"a610\",\r",
									"                        \"a620\",\r",
									"                        \"a629\",\r",
									"                        \"a649\",\r",
									"                        \"a650\",\r",
									"                        \"a660\",\r",
									"                        \"a669\",\r",
									"                        \"a698\",\r",
									"                        \"a699\"\r",
									"                      ]\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"descripcionDominio\",\r",
									"                    \"nivel\",\r",
									"                    \"nivelGravedad\",\r",
									"                    \"puntuacion\",\r",
									"                    \"actividades\"\r",
									"                  ]\r",
									"                },\r",
									"                \"7\": {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"descripcionDominio\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"nivel\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"nivelGravedad\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"puntuacion\": {\r",
									"                      \"type\": \"integer\"\r",
									"                    },\r",
									"                    \"actividades\": {\r",
									"                      \"type\": \"object\",\r",
									"                      \"properties\": {\r",
									"                        \"a760\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a750\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a730\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a740\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a710\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a720\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a729\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a770\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a779\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a798\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a799\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        }\r",
									"                      },\r",
									"                      \"required\": [\r",
									"                        \"a760\",\r",
									"                        \"a750\",\r",
									"                        \"a730\",\r",
									"                        \"a740\",\r",
									"                        \"a710\",\r",
									"                        \"a720\",\r",
									"                        \"a729\",\r",
									"                        \"a770\",\r",
									"                        \"a779\",\r",
									"                        \"a798\",\r",
									"                        \"a799\"\r",
									"                      ]\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"descripcionDominio\",\r",
									"                    \"nivel\",\r",
									"                    \"nivelGravedad\",\r",
									"                    \"puntuacion\",\r",
									"                    \"actividades\"\r",
									"                  ]\r",
									"                },\r",
									"                \"8\": {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"descripcionDominio\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"nivel\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"nivelGravedad\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"puntuacion\": {\r",
									"                      \"type\": \"integer\"\r",
									"                    },\r",
									"                    \"actividades\": {\r",
									"                      \"type\": \"object\",\r",
									"                      \"properties\": {\r",
									"                        \"a825\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a860\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a870\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a815\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a820\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a850\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a880\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a810\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a830\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a839\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a840\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a845\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a855\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a859\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a865\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a879\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a898\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a899\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        }\r",
									"                      },\r",
									"                      \"required\": [\r",
									"                        \"a825\",\r",
									"                        \"a860\",\r",
									"                        \"a870\",\r",
									"                        \"a815\",\r",
									"                        \"a820\",\r",
									"                        \"a850\",\r",
									"                        \"a880\",\r",
									"                        \"a810\",\r",
									"                        \"a830\",\r",
									"                        \"a839\",\r",
									"                        \"a840\",\r",
									"                        \"a845\",\r",
									"                        \"a855\",\r",
									"                        \"a859\",\r",
									"                        \"a865\",\r",
									"                        \"a879\",\r",
									"                        \"a898\",\r",
									"                        \"a899\"\r",
									"                      ]\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"descripcionDominio\",\r",
									"                    \"nivel\",\r",
									"                    \"nivelGravedad\",\r",
									"                    \"puntuacion\",\r",
									"                    \"actividades\"\r",
									"                  ]\r",
									"                },\r",
									"                \"9\": {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"descripcionDominio\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"nivel\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"nivelGravedad\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"puntuacion\": {\r",
									"                      \"type\": \"integer\"\r",
									"                    },\r",
									"                    \"actividades\": {\r",
									"                      \"type\": \"object\",\r",
									"                      \"properties\": {\r",
									"                        \"a920\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a910\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a930\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a940\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a950\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a998\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a999\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        }\r",
									"                      },\r",
									"                      \"required\": [\r",
									"                        \"a920\",\r",
									"                        \"a910\",\r",
									"                        \"a930\",\r",
									"                        \"a940\",\r",
									"                        \"a950\",\r",
									"                        \"a998\",\r",
									"                        \"a999\"\r",
									"                      ]\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"descripcionDominio\",\r",
									"                    \"nivel\",\r",
									"                    \"nivelGravedad\",\r",
									"                    \"puntuacion\",\r",
									"                    \"actividades\"\r",
									"                  ]\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"1\",\r",
									"                \"2\",\r",
									"                \"3\",\r",
									"                \"4\",\r",
									"                \"5\",\r",
									"                \"6\",\r",
									"                \"7\",\r",
									"                \"8\",\r",
									"                \"9\"\r",
									"              ]\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"evaluado\",\r",
									"            \"fechaEvaluacion\",\r",
									"            \"limitacionGlobalPersona\",\r",
									"            \"limitacionEnMovilidad\",\r",
									"            \"movilidadReducida\",\r",
									"            \"cicloVital\",\r",
									"            \"puntuacionesPorDominio\"\r",
									"          ]\r",
									"        },\r",
									"        \"BLAProfesional2\": {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"evaluado\": {\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \"fechaEvaluacion\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"limitacionGlobalPersona\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"limitacionGraveAutocuidado\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"limitacionEnMovilidad\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"movilidadReducida\": {\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \"cicloVital\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"puntuacionesPorDominio\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"1\": {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"descripcionDominio\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"nivel\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"nivelGravedad\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"puntuacion\": {\r",
									"                      \"type\": \"integer\"\r",
									"                    },\r",
									"                    \"actividades\": {\r",
									"                      \"type\": \"object\",\r",
									"                      \"properties\": {\r",
									"                        \"a166\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a175\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a170\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a140\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a145\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a150\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a160\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a110\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a115\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a120\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a129\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a130\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a135\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a155\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a159\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a161\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a163\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a172\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a177\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a179\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a198\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a199\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        }\r",
									"                      },\r",
									"                      \"required\": [\r",
									"                        \"a166\",\r",
									"                        \"a175\",\r",
									"                        \"a170\",\r",
									"                        \"a140\",\r",
									"                        \"a145\",\r",
									"                        \"a150\",\r",
									"                        \"a160\",\r",
									"                        \"a110\",\r",
									"                        \"a115\",\r",
									"                        \"a120\",\r",
									"                        \"a129\",\r",
									"                        \"a130\",\r",
									"                        \"a135\",\r",
									"                        \"a155\",\r",
									"                        \"a159\",\r",
									"                        \"a161\",\r",
									"                        \"a163\",\r",
									"                        \"a172\",\r",
									"                        \"a177\",\r",
									"                        \"a179\",\r",
									"                        \"a198\",\r",
									"                        \"a199\"\r",
									"                      ]\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"descripcionDominio\",\r",
									"                    \"nivel\",\r",
									"                    \"nivelGravedad\",\r",
									"                    \"puntuacion\",\r",
									"                    \"actividades\"\r",
									"                  ]\r",
									"                },\r",
									"                \"2\": {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"descripcionDominio\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"nivel\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"nivelGravedad\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"puntuacion\": {\r",
									"                      \"type\": \"integer\"\r",
									"                    },\r",
									"                    \"actividades\": {\r",
									"                      \"type\": \"object\",\r",
									"                      \"properties\": {\r",
									"                        \"a240\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a230\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a210\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a250\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a220\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a298\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a299\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        }\r",
									"                      },\r",
									"                      \"required\": [\r",
									"                        \"a240\",\r",
									"                        \"a230\",\r",
									"                        \"a210\",\r",
									"                        \"a250\",\r",
									"                        \"a220\",\r",
									"                        \"a298\",\r",
									"                        \"a299\"\r",
									"                      ]\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"descripcionDominio\",\r",
									"                    \"nivel\",\r",
									"                    \"nivelGravedad\",\r",
									"                    \"puntuacion\",\r",
									"                    \"actividades\"\r",
									"                  ]\r",
									"                },\r",
									"                \"3\": {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"descripcionDominio\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"nivel\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"nivelGravedad\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"puntuacion\": {\r",
									"                      \"type\": \"integer\"\r",
									"                    },\r",
									"                    \"actividades\": {\r",
									"                      \"type\": \"object\",\r",
									"                      \"properties\": {\r",
									"                        \"a360\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a350\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a315\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a310\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a330\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a320\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a325\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a329\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a335\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a340\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a345\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a349\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a355\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a369\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a398\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a399\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        }\r",
									"                      },\r",
									"                      \"required\": [\r",
									"                        \"a360\",\r",
									"                        \"a350\",\r",
									"                        \"a315\",\r",
									"                        \"a310\",\r",
									"                        \"a330\",\r",
									"                        \"a320\",\r",
									"                        \"a325\",\r",
									"                        \"a329\",\r",
									"                        \"a335\",\r",
									"                        \"a340\",\r",
									"                        \"a345\",\r",
									"                        \"a349\",\r",
									"                        \"a355\",\r",
									"                        \"a369\",\r",
									"                        \"a398\",\r",
									"                        \"a399\"\r",
									"                      ]\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"descripcionDominio\",\r",
									"                    \"nivel\",\r",
									"                    \"nivelGravedad\",\r",
									"                    \"puntuacion\",\r",
									"                    \"actividades\"\r",
									"                  ]\r",
									"                },\r",
									"                \"4\": {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"descripcionDominio\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"nivel\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"nivelGravedad\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"puntuacion\": {\r",
									"                      \"type\": \"integer\"\r",
									"                    },\r",
									"                    \"actividades\": {\r",
									"                      \"type\": \"object\",\r",
									"                      \"properties\": {\r",
									"                        \"a440\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a4702\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a4602\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a4600\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a450\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a415\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a430\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a410\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a4751\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a420\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a429\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a435\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a445\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a449\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a455\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a460\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a465\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a469\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a470\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a475\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a480\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a489\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a498\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a499\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        }\r",
									"                      },\r",
									"                      \"required\": [\r",
									"                        \"a440\",\r",
									"                        \"a4702\",\r",
									"                        \"a4602\",\r",
									"                        \"a4600\",\r",
									"                        \"a450\",\r",
									"                        \"a415\",\r",
									"                        \"a430\",\r",
									"                        \"a410\",\r",
									"                        \"a4751\",\r",
									"                        \"a420\",\r",
									"                        \"a429\",\r",
									"                        \"a435\",\r",
									"                        \"a445\",\r",
									"                        \"a449\",\r",
									"                        \"a455\",\r",
									"                        \"a460\",\r",
									"                        \"a465\",\r",
									"                        \"a469\",\r",
									"                        \"a470\",\r",
									"                        \"a475\",\r",
									"                        \"a480\",\r",
									"                        \"a489\",\r",
									"                        \"a498\",\r",
									"                        \"a499\"\r",
									"                      ]\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"descripcionDominio\",\r",
									"                    \"nivel\",\r",
									"                    \"nivelGravedad\",\r",
									"                    \"puntuacion\",\r",
									"                    \"actividades\"\r",
									"                  ]\r",
									"                },\r",
									"                \"5\": {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"descripcionDominio\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"nivel\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"nivelGravedad\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"puntuacion\": {\r",
									"                      \"type\": \"integer\"\r",
									"                    },\r",
									"                    \"actividades\": {\r",
									"                      \"type\": \"object\",\r",
									"                      \"properties\": {\r",
									"                        \"a560\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a540\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a520\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a570\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a550\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a530\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a510\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a571\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a598\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a599\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        }\r",
									"                      },\r",
									"                      \"required\": [\r",
									"                        \"a560\",\r",
									"                        \"a540\",\r",
									"                        \"a520\",\r",
									"                        \"a570\",\r",
									"                        \"a550\",\r",
									"                        \"a530\",\r",
									"                        \"a510\",\r",
									"                        \"a571\",\r",
									"                        \"a598\",\r",
									"                        \"a599\"\r",
									"                      ]\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"descripcionDominio\",\r",
									"                    \"nivel\",\r",
									"                    \"nivelGravedad\",\r",
									"                    \"puntuacion\",\r",
									"                    \"actividades\"\r",
									"                  ]\r",
									"                },\r",
									"                \"6\": {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"descripcionDominio\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"nivel\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"nivelGravedad\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"puntuacion\": {\r",
									"                      \"type\": \"integer\"\r",
									"                    },\r",
									"                    \"actividades\": {\r",
									"                      \"type\": \"object\",\r",
									"                      \"properties\": {\r",
									"                        \"a640\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a6200\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a630\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a610\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a620\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a629\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a649\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a650\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a660\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a669\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a698\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a699\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        }\r",
									"                      },\r",
									"                      \"required\": [\r",
									"                        \"a640\",\r",
									"                        \"a6200\",\r",
									"                        \"a630\",\r",
									"                        \"a610\",\r",
									"                        \"a620\",\r",
									"                        \"a629\",\r",
									"                        \"a649\",\r",
									"                        \"a650\",\r",
									"                        \"a660\",\r",
									"                        \"a669\",\r",
									"                        \"a698\",\r",
									"                        \"a699\"\r",
									"                      ]\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"descripcionDominio\",\r",
									"                    \"nivel\",\r",
									"                    \"nivelGravedad\",\r",
									"                    \"puntuacion\",\r",
									"                    \"actividades\"\r",
									"                  ]\r",
									"                },\r",
									"                \"7\": {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"descripcionDominio\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"nivel\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"nivelGravedad\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"puntuacion\": {\r",
									"                      \"type\": \"integer\"\r",
									"                    },\r",
									"                    \"actividades\": {\r",
									"                      \"type\": \"object\",\r",
									"                      \"properties\": {\r",
									"                        \"a760\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a750\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a730\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a740\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a710\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a720\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a729\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a770\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a779\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a798\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a799\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        }\r",
									"                      },\r",
									"                      \"required\": [\r",
									"                        \"a760\",\r",
									"                        \"a750\",\r",
									"                        \"a730\",\r",
									"                        \"a740\",\r",
									"                        \"a710\",\r",
									"                        \"a720\",\r",
									"                        \"a729\",\r",
									"                        \"a770\",\r",
									"                        \"a779\",\r",
									"                        \"a798\",\r",
									"                        \"a799\"\r",
									"                      ]\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"descripcionDominio\",\r",
									"                    \"nivel\",\r",
									"                    \"nivelGravedad\",\r",
									"                    \"puntuacion\",\r",
									"                    \"actividades\"\r",
									"                  ]\r",
									"                },\r",
									"                \"8\": {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"descripcionDominio\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"nivel\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"nivelGravedad\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"puntuacion\": {\r",
									"                      \"type\": \"integer\"\r",
									"                    },\r",
									"                    \"actividades\": {\r",
									"                      \"type\": \"object\",\r",
									"                      \"properties\": {\r",
									"                        \"a825\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a860\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a870\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a815\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a820\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a850\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a880\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a810\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a830\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a839\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a840\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a845\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a855\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a859\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a865\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a879\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a898\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a899\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        }\r",
									"                      },\r",
									"                      \"required\": [\r",
									"                        \"a825\",\r",
									"                        \"a860\",\r",
									"                        \"a870\",\r",
									"                        \"a815\",\r",
									"                        \"a820\",\r",
									"                        \"a850\",\r",
									"                        \"a880\",\r",
									"                        \"a810\",\r",
									"                        \"a830\",\r",
									"                        \"a839\",\r",
									"                        \"a840\",\r",
									"                        \"a845\",\r",
									"                        \"a855\",\r",
									"                        \"a859\",\r",
									"                        \"a865\",\r",
									"                        \"a879\",\r",
									"                        \"a898\",\r",
									"                        \"a899\"\r",
									"                      ]\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"descripcionDominio\",\r",
									"                    \"nivel\",\r",
									"                    \"nivelGravedad\",\r",
									"                    \"puntuacion\",\r",
									"                    \"actividades\"\r",
									"                  ]\r",
									"                },\r",
									"                \"9\": {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"descripcionDominio\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"nivel\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"nivelGravedad\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"puntuacion\": {\r",
									"                      \"type\": \"integer\"\r",
									"                    },\r",
									"                    \"actividades\": {\r",
									"                      \"type\": \"object\",\r",
									"                      \"properties\": {\r",
									"                        \"a920\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a910\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"integer\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a930\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a940\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a950\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a998\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        },\r",
									"                        \"a999\": {\r",
									"                          \"type\": \"object\",\r",
									"                          \"properties\": {\r",
									"                            \"descripcionActividad\": {\r",
									"                              \"type\": \"string\"\r",
									"                            },\r",
									"                            \"nivelGravedad\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"puntuacion\": {\r",
									"                              \"type\": \"null\"\r",
									"                            },\r",
									"                            \"ampliada\": {\r",
									"                              \"type\": \"boolean\"\r",
									"                            }\r",
									"                          },\r",
									"                          \"required\": [\r",
									"                            \"descripcionActividad\",\r",
									"                            \"nivelGravedad\",\r",
									"                            \"puntuacion\",\r",
									"                            \"ampliada\"\r",
									"                          ]\r",
									"                        }\r",
									"                      },\r",
									"                      \"required\": [\r",
									"                        \"a920\",\r",
									"                        \"a910\",\r",
									"                        \"a930\",\r",
									"                        \"a940\",\r",
									"                        \"a950\",\r",
									"                        \"a998\",\r",
									"                        \"a999\"\r",
									"                      ]\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"descripcionDominio\",\r",
									"                    \"nivel\",\r",
									"                    \"nivelGravedad\",\r",
									"                    \"puntuacion\",\r",
									"                    \"actividades\"\r",
									"                  ]\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"1\",\r",
									"                \"2\",\r",
									"                \"3\",\r",
									"                \"4\",\r",
									"                \"5\",\r",
									"                \"6\",\r",
									"                \"7\",\r",
									"                \"8\",\r",
									"                \"9\"\r",
									"              ]\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"evaluado\",\r",
									"            \"fechaEvaluacion\",\r",
									"            \"limitacionGlobalPersona\",\r",
									"            \"limitacionGraveAutocuidado\",\r",
									"            \"limitacionEnMovilidad\",\r",
									"            \"movilidadReducida\",\r",
									"            \"cicloVital\",\r",
									"            \"puntuacionesPorDominio\"\r",
									"          ]\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"BLAResultado\",\r",
									"        \"BLAProfesional1\",\r",
									"        \"BLAProfesional2\"\r",
									"      ]\r",
									"    },\r",
									"    \"usuariosValoracion\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"0\": {\r",
									"          \"type\": \"string\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"0\"\r",
									"      ]\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"codigoExpediente\",\r",
									"    \"fechaNacimiento\",\r",
									"    \"codigoEntidad\",\r",
									"    \"limitacionGlobalPersona\",\r",
									"    \"limitacionGraveAutocuidado\",\r",
									"    \"limitacionEnMovilidad\",\r",
									"    \"baremoBlaValido\",\r",
									"    \"usoBlgtaa\",\r",
									"    \"baremoBlgtaPrincipal\",\r",
									"    \"baremoBlaPrincipal\",\r",
									"    \"baremoBlaSecundario\",\r",
									"    \"baremoBlaIncluido\",\r",
									"    \"motivoNoInclusionBla\",\r",
									"    \"baremosBLA\",\r",
									"    \"usuariosValoracion\"\r",
									"  ]\r",
									"};\r",
									"pm.variables.set(\"schemaRespuestaOK\",schemaRespuestaOk,Object);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var schemaResultado = pm.variables.get('schemaRespuestaOK');\r",
									"\r",
									"const responseJson = pm.response.json();\r",
									"\r",
									"pm.test('Response status code is 200', function () {\r",
									"    pm.expect(pm.response.code).to.equal(200);\r",
									"})\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response schema JSON\",()=> {\r",
									"    pm.expect(responseJson).to.have.jsonSchema(schemaResultado);\r",
									"});\r",
									"\r",
									"pm.test('InformacionClinica array is present and contains at least one element', function () {\r",
									"    pm.expect(responseJson).to.be.an('object');\r",
									"    pm.expect(responseJson.baremosBLA).to.exist.and.is.not.empty;\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{expedienteBLA}}\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/getInformacionBLA"
					},
					"response": []
				},
				{
					"name": "getInformacionBLAKOEvalNoFinalizadaSinGFDP",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response status code is 400\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {\r",
									"    pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Message should not be empty\");\r",
									"    pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"    pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {\r",
									"    pm.expect(responseData.mensaje).equals(\"Se ha producido un error en la obtención del resultado de la evaluación\");\r",
									"    pm.expect(responseData.detalles).equals(\"No se ha finalizado la valoración de discapacidad del solicitante\");\r",
									"    pm.expect(responseData.codigo).equals(\"EVAL001\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{expedienteSinGFDP}}\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/getInformacionBLA"
					},
					"response": []
				},
				{
					"name": "getInformacionBLAKOcodigoExpedienteInexistente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response status code is 400\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {\r",
									"    pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Message should not be empty\");\r",
									"    pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"    pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {\r",
									"  pm.expect(responseData.mensaje).equals(\"Se han producido errores en la actualización del solicitante\");\r",
									"  pm.expect(responseData.detalles).equals(\"El parámetro \\'codigoExpediente\\' es obligatorio\");\r",
									"  pm.expect(responseData.codigo).equals(\"SOL001\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/getInformacionBLA"
					},
					"response": []
				},
				{
					"name": "getInformacionBLAKOcodigoExpedienteVacio",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response status code is 400\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {\r",
									"    pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Message should not be empty\");\r",
									"    pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"    pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {\r",
									"  pm.expect(responseData.mensaje).equals(\"Se han producido errores en la actualización del solicitante\");\r",
									"  pm.expect(responseData.detalles).equals(\"El parámetro \\'codigoExpediente\\' es obligatorio\");\r",
									"  pm.expect(responseData.codigo).equals(\"SOL001\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n     \"codigoExpediente\":\"\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/getInformacionBLA"
					},
					"response": []
				},
				{
					"name": "getInformacionBLAKOcodigoExpedienteIncorrecto",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response status code is 400\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {\r",
									"    pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Message should not be empty\");\r",
									"    pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"    pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {\r",
									"  pm.expect(responseData.mensaje).equals(\"Se ha producido un error en la obtención del resultado de la evaluación\");\r",
									"  pm.expect(responseData.detalles).equals(\"No existe ningún expediente con el código proporcionado.\");\r",
									"  pm.expect(responseData.codigo).equals(\"SOL011\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{valorAleatorio}}\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/getInformacionBLA"
					},
					"response": []
				},
				{
					"name": "getInformacionBLAKOcodigoExpedienteMayor255",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response status code is 400\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {\r",
									"    pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Message should not be empty\");\r",
									"    pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"    pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {\r",
									"  pm.expect(responseData.mensaje).equals(\"Se han producido errores en la actualización del solicitante\");\r",
									"  pm.expect(responseData.detalles).equals(\"El parámetro 'codigoExpediente' debe tener como máximo 255 caracteres\");\r",
									"  pm.expect(responseData.codigo).equals(\"SOL002\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{mayor255}}\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/getInformacionBLA"
					},
					"response": []
				},
				{
					"name": "getInformacionBLAKOcodigoEntidadMayor50",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response status code is 400\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {\r",
									"    pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Message should not be empty\");\r",
									"    pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"    pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {\r",
									"  pm.expect(responseData.mensaje).equals(\"Se han producido errores en la actualización del solicitante\");\r",
									"  pm.expect(responseData.detalles).equals(\"El parámetro 'codigoEntidad' debe tener como máximo 50 caracteres\");\r",
									"  pm.expect(responseData.codigo).equals(\"SOL004\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{solicitante}}\",\r\n    \"codigoEntidad\":\"{{mayor255}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/getInformacionBLA"
					},
					"response": []
				},
				{
					"name": "getInformacionBLAKOcodigoEntidadVacia",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response status code is 400\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {\r",
									"    pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Message should not be empty\");\r",
									"    pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"    pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {\r",
									"  pm.expect(responseData.mensaje).equals(\"Se han producido errores en la actualización del solicitante\");\r",
									"  pm.expect(responseData.detalles).equals(\"El parámetro \\'codigoEntidad\\' es obligatorio\");\r",
									"  pm.expect(responseData.codigo).equals(\"SOL003\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{solicitante}}\",\r\n    \"codigoEntidad\":\"\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/getInformacionBLA"
					},
					"response": []
				},
				{
					"name": "getInformacionBLAKOcodigoEntidadIncorrecta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response status code is 400\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {\r",
									"    pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Message should not be empty\");\r",
									"    pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"    pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {\r",
									"  pm.expect(responseData.mensaje).equals(\"Se ha producido un error en la obtención del resultado de la evaluación\");\r",
									"  pm.expect(responseData.detalles).equals(\"No existe ninguna entidad gestora con el código proporcionado.\");\r",
									"  pm.expect(responseData.codigo).equals(\"SOL010\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{solicitante}}\",\r\n    \"codigoEntidad\":\"{{valorAleatorio}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/getInformacionBLA"
					},
					"response": []
				}
			]
		},
		{
			"name": "getInformacionBDGP",
			"item": [
				{
					"name": "getInformacionBDGPOK",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var schemaRespuestaOk = {};\r",
									"pm.variables.set(\"schemaRespuestaOK\",schemaRespuestaOk,Object);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var schemaResultado = pm.variables.get('schemaRespuestaOK');\r",
									"\r",
									"const responseJson = pm.response.json();\r",
									"\r",
									"pm.test('Response status code is 200', function () {\r",
									"    pm.expect(pm.response.code).to.equal(200);\r",
									"})\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response schema JSON\",()=> {\r",
									"    pm.expect(responseJson).to.have.jsonSchema(schemaResultado);\r",
									"});\r",
									"\r",
									"pm.test('InformacionClinica array is present and contains at least one element', function () {\r",
									"    pm.expect(responseJson).to.be.an('object');\r",
									"    pm.expect(responseJson.informeSintesis.informacionClinica).to.exist.and.to.be.an('array').that.is.not.empty;\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{ExpedienteBRP}}\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/getInformacionBRP"
					},
					"response": []
				},
				{
					"name": "getInformacionBDGPKOEvalNoFinalizadaSinGFDP",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response status code is 400\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {\r",
									"    pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Message should not be empty\");\r",
									"    pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"    pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {\r",
									"    pm.expect(responseData.mensaje).equals(\"Se ha producido un error en la obtención del resultado de la evaluación\");\r",
									"    pm.expect(responseData.detalles).equals(\"No se ha finalizado la valoración de discapacidad del solicitante\");\r",
									"    pm.expect(responseData.codigo).equals(\"EVAL001\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{expedienteSinGFDP}}\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/getResultado"
					},
					"response": []
				},
				{
					"name": "getInformacionBDGPKOcodigoExpedienteInexistente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response status code is 400\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {\r",
									"    pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Message should not be empty\");\r",
									"    pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"    pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {\r",
									"  pm.expect(responseData.mensaje).equals(\"Se han producido errores en la actualización del solicitante\");\r",
									"  pm.expect(responseData.detalles).equals(\"El parámetro \\'codigoExpediente\\' es obligatorio\");\r",
									"  pm.expect(responseData.codigo).equals(\"SOL001\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/getResultado"
					},
					"response": []
				},
				{
					"name": "getInformacionBDGPKOcodigoExpedienteVacio",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response status code is 400\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {\r",
									"    pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Message should not be empty\");\r",
									"    pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"    pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {\r",
									"  pm.expect(responseData.mensaje).equals(\"Se han producido errores en la actualización del solicitante\");\r",
									"  pm.expect(responseData.detalles).equals(\"El parámetro \\'codigoExpediente\\' es obligatorio\");\r",
									"  pm.expect(responseData.codigo).equals(\"SOL001\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n     \"codigoExpediente\":\"\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/getResultado"
					},
					"response": []
				},
				{
					"name": "getInformacionBDGPKOcodigoExpedienteIncorrecto",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response status code is 400\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {\r",
									"    pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Message should not be empty\");\r",
									"    pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"    pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {\r",
									"  pm.expect(responseData.mensaje).equals(\"Se ha producido un error en la obtención del resultado de la evaluación\");\r",
									"  pm.expect(responseData.detalles).equals(\"No existe ningún expediente con el código proporcionado.\");\r",
									"  pm.expect(responseData.codigo).equals(\"SOL011\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{valorAleatorio}}\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/getResultado"
					},
					"response": []
				},
				{
					"name": "getInformacionBDGPKOcodigoExpedienteMayor255",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response status code is 400\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {\r",
									"    pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Message should not be empty\");\r",
									"    pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"    pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {\r",
									"  pm.expect(responseData.mensaje).equals(\"Se han producido errores en la actualización del solicitante\");\r",
									"  pm.expect(responseData.detalles).equals(\"El parámetro 'codigoExpediente' debe tener como máximo 255 caracteres\");\r",
									"  pm.expect(responseData.codigo).equals(\"SOL002\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{mayor255}}\",\r\n    \"codigoEntidad\":\"{{codigoEntidadImserso}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/getResultado"
					},
					"response": []
				},
				{
					"name": "getInformacionBDGPKOcodigoEntidadMayor50",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response status code is 400\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {\r",
									"    pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Message should not be empty\");\r",
									"    pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"    pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {\r",
									"  pm.expect(responseData.mensaje).equals(\"Se han producido errores en la actualización del solicitante\");\r",
									"  pm.expect(responseData.detalles).equals(\"El parámetro 'codigoEntidad' debe tener como máximo 50 caracteres\");\r",
									"  pm.expect(responseData.codigo).equals(\"SOL004\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{solicitante}}\",\r\n    \"codigoEntidad\":\"{{mayor255}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/getResultado"
					},
					"response": []
				},
				{
					"name": "getInformacionBDGPKOcodigoEntidadVacia",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response status code is 400\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {\r",
									"    pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Message should not be empty\");\r",
									"    pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"    pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {\r",
									"  pm.expect(responseData.mensaje).equals(\"Se han producido errores en la actualización del solicitante\");\r",
									"  pm.expect(responseData.detalles).equals(\"El parámetro \\'codigoEntidad\\' es obligatorio\");\r",
									"  pm.expect(responseData.codigo).equals(\"SOL003\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{solicitante}}\",\r\n    \"codigoEntidad\":\"\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/getResultado"
					},
					"response": []
				},
				{
					"name": "getInformacionBDGPKOcodigoEntidadIncorrecta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response status code is 400\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type header is set to application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('mensaje');\r",
									"    pm.expect(responseData).to.have.property('codigo');\r",
									"    pm.expect(responseData).to.have.property('detalles');\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are a non-empty strings\", function () {\r",
									"    pm.expect(responseData.mensaje).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Message should not be empty\");\r",
									"    pm.expect(responseData.detalles).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Detalles should not be empty\");\r",
									"    pm.expect(responseData.codigo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Codigo should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje, codigo and detalles are correctly\", function () {\r",
									"  pm.expect(responseData.mensaje).equals(\"Se ha producido un error en la obtención del resultado de la evaluación\");\r",
									"  pm.expect(responseData.detalles).equals(\"No existe ninguna entidad gestora con el código proporcionado.\");\r",
									"  pm.expect(responseData.codigo).equals(\"SOL010\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigoExpediente\":\"{{solicitante}}\",\r\n    \"codigoEntidad\":\"{{valorAleatorio}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{raiz}}evaluacion/getResultado"
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "raiz",
			"value": "https://preinteropbaredi.imserso.es/baredi/interop/",
			"type": "string"
		},
		{
			"key": "solicitante",
			"value": ""
		},
		{
			"key": "fechaSolicitante",
			"value": ""
		},
		{
			"key": "schemaRespuesta",
			"value": ""
		}
	]
}